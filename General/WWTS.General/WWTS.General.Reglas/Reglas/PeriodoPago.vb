'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General

#Region "PeriodoPago"
Public Class PeriodoPago

  Const _Procedimiento As String = "proc_PeriodoPago"

  Private mPardetPeriodoPago As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _PerPag_FechaDesde As Date, ByVal _Parame_PeriodoPago As Integer, ByVal _Pardet_PeriodoPago As Integer)
    Me.New(_OperadorDatos, False)
    PerPag_FechaDesde = _PerPag_FechaDesde
    Parame_PeriodoPago = _Parame_PeriodoPago
    Pardet_PeriodoPago = _Pardet_PeriodoPago
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto PeriodoPago")
    End If
  End Sub

  Public Property PardetPeriodoPago() As WWTSParametroDet
    Get
      If mPardetPeriodoPago Is Nothing AndAlso Pardet_PeriodoPago > 0 Then
        mPardetPeriodoPago = New WWTSParametroDet(OperadorDatos, Parame_PeriodoPago, Pardet_PeriodoPago)
      End If
      Return mPardetPeriodoPago
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetPeriodoPago = value
      Parame_PeriodoPago = value.Parame_Codigo
      Pardet_PeriodoPago = value.Pardet_Secuencia
    End Set
  End Property

  Public ReadOnly Property Descripcion() As String
    Get
      Return String.Format("{0} {1}-{2}", IIf(Me.PerPag_esQuincena, "Q", "F"), Me.PerPag_FechaDesde.ToShortDateString, Me.PerPag_FechaHasta.ToShortDateString)
    End Get
  End Property

  Public ReadOnly Property Marcacion() As String
    Get
      Return String.Format("{0}-{1}", Me.PerPag_FechaDesdeMarcacion.ToShortDateString, Me.PerPag_FechaHastaMarcacion.ToShortDateString)
    End Get
  End Property

  Public ReadOnly Property IntervaloDias() As Integer
    Get
      Return PerPag_FechaHasta.Subtract(PerPag_FechaDesde).Days + 1
    End Get
  End Property

  Public ReadOnly Property IntervaloDiasMarcacion() As Integer
    Get
      Return PerPag_FechaHastaMarcacion.Subtract(PerPag_FechaDesdeMarcacion).Days + 1
    End Get
  End Property

  Public ReadOnly Property IntervaloDiasQuincena() As Integer
    Get
      Return 15
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    PerPag_FechaDesde = CType(Fila("PerPag_FechaDesde"), Date)
    Parame_PeriodoPago = CType(Fila("Parame_PeriodoPago"), Integer)
    Pardet_PeriodoPago = CType(Fila("Pardet_PeriodoPago"), Integer)
    PerPag_FechaHasta = CType(Fila("PerPag_FechaHasta"), Date)
    PerPag_FechaPago = CType(Fila("PerPag_FechaPago"), Date)
    PerPag_esPagado = CType(Fila("PerPag_esPagado"), Boolean)
    If TypeOf Fila("PerPag_esQuincena") Is DBNull Then
      PerPag_esQuincena = False
    Else
      PerPag_esQuincena = CType(Fila("PerPag_esQuincena"), Boolean)
    End If
    PerPag_anio = CInt(Fila("PerPag_anio"))
    PerPag_mes = CInt(Fila("PerPag_mes"))
    Try
      PerPag_FechaDesdeMarcacion = CType(Fila("PerPag_FechaDesdeMarcacion"), Date)
    Catch ex As Exception
      PerPag_FechaDesdeMarcacion = Now.Date
    End Try
    Try
      PerPag_FechaHastaMarcacion = CType(Fila("PerPag_FechaHastaMarcacion"), Date)
    Catch ex As Exception
      PerPag_FechaHastaMarcacion = Now.Date
    End Try

    mPardetPeriodoPago = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.AgregarParametro("@PerPag_FechaHasta", PerPag_FechaHasta)
    OperadorDatos.AgregarParametro("@PerPag_FechaPago", PerPag_FechaPago)
    OperadorDatos.AgregarParametro("@PerPag_esPagado", PerPag_esPagado)
    OperadorDatos.AgregarParametro("@PerPag_esQuincena", PerPag_esQuincena)
    OperadorDatos.AgregarParametro("@PerPag_anio", PerPag_anio)
    OperadorDatos.AgregarParametro("@PerPag_mes", PerPag_mes)
    OperadorDatos.AgregarParametro("@PerPag_FechaDesdeMarcacion", PerPag_FechaDesdeMarcacion)
    OperadorDatos.AgregarParametro("@PerPag_FechaHastaMarcacion", PerPag_FechaHastaMarcacion)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "PeriodoPagoList"
Public Class PeriodoPagoList
  Inherits System.ComponentModel.BindingList(Of PeriodoPago)
  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _PardetPeriodoPago As WWTSParametroDet = Nothing, Optional ByVal _filtro As String = "") As PeriodoPagoList
    Dim oResult As PeriodoPagoList = New PeriodoPagoList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      If _PardetPeriodoPago IsNot Nothing Then
        .AgregarParametro("@Parame_PeriodoPago", _PardetPeriodoPago.Parame_Codigo)
        .AgregarParametro("@Pardet_PeriodoPago", _PardetPeriodoPago.Pardet_Secuencia)
      End If
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_PeriodoPago"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PeriodoPago(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, ByVal _PardetPeriodoPago As WWTSParametroDet, ByVal _mes As Integer, ByVal _anio As Integer) As PeriodoPagoList
    Dim oResult As New PeriodoPagoList
    Dim bReturn As Boolean
    Dim dsResult As New datatable
    With _OperadorDatos
      .AgregarParametro("@accion", "FM")
      .AgregarParametro("@anio", _anio)
      .AgregarParametro("@mes", _mes)
      .AgregarParametro("@Parame_PeriodoPago", _PardetPeriodoPago.Parame_Codigo)
      .AgregarParametro("@Pardet_PeriodoPago", _PardetPeriodoPago.Pardet_Secuencia)
      .Procedimiento = "proc_PeriodoPago"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not dsResult Is Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New PeriodoPago(_OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
