'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

Public Class ConfigRoles

  Private Const _Procedimiento As String = "proc_ConfigRoles"

#Region "Campos variables"
  Private mPardetPais As WWTSParametroDet = Nothing
#End Region

#Region "Propiedades públicas de la clase"

  Public Property PardetPais() As WWTSParametroDet
    Get
      If mPardetPais Is Nothing And Pardet_Pais <> 0 Then
        mPardetPais = New WWTSParametroDet(Me.OperadorDatos, Parame_Pais, Pardet_Pais)
      End If
      Return mPardetPais
    End Get
    Set(ByVal Value As WWTSParametroDet)
      Me.mPardetPais = Value
      Me.Parame_Pais = Value.Parame_Codigo
      Me.Pardet_Pais = Value.Pardet_Secuencia
    End Set
  End Property
#End Region

#Region "Constructores de la clase"
  Private Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _PardetPais As WWTSParametroDet, ByVal _Nuevo As Boolean)
    Me.New(_OperadorDatos, False)
    Me.PardetPais = _PardetPais
    EsNuevo = _Nuevo
    If Not _Nuevo Then
      If Not Me.Recargar Then
        EsNuevo = True
        'Throw New Exception("El objeto no puede ser cargado")
      End If
    End If
  End Sub
#End Region

#Region "Implementación de los métodos de persistencia"
  Public Function Recargar() As Boolean
    Dim dsResult As New DataTable
    Dim bResult As Boolean

    With Me.OperadorDatos
      .AgregarParametro("@accion", "C")
      .AgregarParametro("@Parame_Pais", Parame_Pais)
      .AgregarParametro("@Pardet_Pais", Pardet_Pais)
      .Procedimiento = _Procedimiento
      bResult = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bResult AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      Me.MapearDataRowaObjeto(dsResult.Rows(0))
      Return True
    Else
      Return False
    End If
  End Function
#End Region

#Region "Métodos internos de la clase"
  Private Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_Pais = CInt(Fila("Parame_Pais"))
    Pardet_Pais = CInt(Fila("Pardet_Pais"))
    mPardetPais = Nothing
    Cnfrol_salariomv = CDec(Fila("Cnfrol_salariomv"))
    Cnfrol_valorhora = CDec(Fila("Cnfrol_valorhora"))
    Cnfrol_compsal = CDec(Fila("Cnfrol_compsal"))
    Cnfrol_porciesspersonal = CDec(Fila("Cnfrol_porciesspersonal"))
    Cnfrol_porciesspatronal = CDec(Fila("Cnfrol_porciesspatronal"))
    Cnfrol_porciece = CDec(Fila("Cnfrol_porciece"))
    Cnfrol_porcsecap = CDec(Fila("Cnfrol_porcsecap"))
    Cnfrol_porciessporhora = CDec(Fila("Cnfrol_porciessporhora"))
    Cnfrol_temphora50 = CDec(Fila("Cnfrol_temphora50"))
    Cnfrol_temphora100 = CDec(Fila("Cnfrol_temphora100"))
    Cnfrol_valorhoraiess = CDec(Fila("Cnfrol_valorhoraiess"))
    Cnfrol_porcpagsubmatenf = CDec(Fila("Cnfrol_porcpagsubmatenf"))
    Cnfrol_factorHora25 = CDec(Fila("Cnfrol_factorHora25"))
    Cnfrol_factorHora50 = CDec(Fila("Cnfrol_factorHora50"))
    Cnfrol_factorHora100 = CDec(Fila("Cnfrol_factorHora100"))
    Cnfrol_MensualizFM = CBool(Fila("Cnfrol_MensualizFM"))
  End Sub

  Public Function Guardar() As Boolean
    Dim dsResult As New DataTable
    Dim bReturn As Boolean
    Dim sAccion As String = String.Empty
    If EsNuevo Then
      sAccion = "I"
    Else
      sAccion = "M"
    End If
    With OperadorDatos
      .AgregarParametro("@accion", sAccion)
      .AgregarParametro("@Parame_Pais", Parame_Pais)
      .AgregarParametro("@Pardet_Pais", Pardet_Pais)
      .AgregarParametro("@Cnfrol_salariomv", Cnfrol_salariomv)
      .AgregarParametro("@Cnfrol_valorhora", Cnfrol_valorhora)
      .AgregarParametro("@Cnfrol_compsal", Cnfrol_compsal)
      .AgregarParametro("@Cnfrol_porciesspersonal", Cnfrol_porciesspersonal)
      .AgregarParametro("@Cnfrol_porciesspatronal", Cnfrol_porciesspatronal)
      .AgregarParametro("@Cnfrol_porciece", Cnfrol_porciece)
      .AgregarParametro("@Cnfrol_porcsecap", Cnfrol_porcsecap)
      .AgregarParametro("@Cnfrol_porciessporhora", Cnfrol_porciessporhora)
      .AgregarParametro("@Cnfrol_temphora50", Cnfrol_temphora50)
      .AgregarParametro("@Cnfrol_temphora100", Cnfrol_temphora100)
      .AgregarParametro("@Cnfrol_valorhoraiess", Cnfrol_valorhoraiess)
      .AgregarParametro("@Cnfrol_porcpagsubmatenf", Cnfrol_porcpagsubmatenf)
      .AgregarParametro("@Cnfrol_factorHora25", Cnfrol_factorHora25)
      .AgregarParametro("@Cnfrol_factorHora50", Cnfrol_factorHora50)
      .AgregarParametro("@Cnfrol_factorHora100", Cnfrol_factorHora100)
      .AgregarParametro("@Cnfrol_MensualizFM", Cnfrol_MensualizFM)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      If bReturn Then
        Me.EsNuevo = False
      End If
      .LimpiarParametros()
    End With
    Return bReturn
  End Function

  Public Function Eliminar() As Boolean
    Dim dsResult As New DataTable
    Dim bReturn As Boolean
    With OperadorDatos
      .AgregarParametro("@accion", "E")
      .AgregarParametro("@Parame_Pais", Parame_Pais)
      .AgregarParametro("@Pardet_Pais", Pardet_Pais)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    Return bReturn
  End Function
#End Region

#Region "Métodos compartidos"
  Public Shared Function RetornarConfigRoless(ByVal _OperadorDatos As OperadorDatos) As ConfigRolesList
    Dim oResult As New ConfigRolesList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _OperadorDatos
      .AgregarParametro("@accion", "F")
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New ConfigRoles(_OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function
#End Region
End Class

Public Class ConfigRolesList
  Inherits System.ComponentModel.BindingList(Of ConfigRoles)
  Public Sub New()
  End Sub

End Class
