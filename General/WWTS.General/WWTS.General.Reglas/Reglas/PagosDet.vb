'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General
Imports WWTS.General.Reglas

#Region "PagosDet"
Public Class PagosDet

  Const _Procedimiento As String = "proc_PagosDet"

  Private mMovimientoInventario As MovimientoInventario = Nothing

  Private mPardetTipoMovPago As WWTSParametroDet = Nothing

  Private mPardetBanco As WWTSParametroDet = Nothing

  Private mPardetTarjetaCredito As WWTSParametroDet = Nothing

  Private mCuentaBancaria As CuentaBancaria = Nothing

  Private mCuentacontable As CuentaContable = Nothing

  Private mSubcuentacontable As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _MovimientoInventario As MovimientoInventario, ByVal _EsNuevo As Boolean)
    Me.New(_MovimientoInventario.OperadorDatos, _EsNuevo)
    MovimientoInventario = _MovimientoInventario
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _MovimientoInventario As MovimientoInventario, ByVal _Pagdet_Secuencia As Integer)
    Me.New(_MovimientoInventario, False)
    Pagdet_Secuencia = _Pagdet_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto PagosDet")
    End If
  End Sub

  'MovimientoInventario
  Public Overridable Property MovimientoInventario() As MovimientoInventario
    Get
      If Me.mMovimientoInventario Is Nothing Then
        If Movinv_Secuencia > 0 Then
          Me.mMovimientoInventario = New MovimientoInventario(New Sucursal(New Empresa(OperadorDatos, Empres_Bodega), Sucurs_Bodega), New WWTSParametroDet(OperadorDatos, Parame_Tipomovinv, Pardet_Tipomovinv), Movinv_Secuencia)
        Else
          Me.mMovimientoInventario = New MovimientoInventario(New Sucursal(New Empresa(OperadorDatos, Empres_Bodega), Sucurs_Bodega), New WWTSParametroDet(OperadorDatos, Parame_Tipomovinv, Pardet_Tipomovinv), True)
        End If
      End If
      Return Me.mMovimientoInventario
    End Get
    Set(ByVal value As MovimientoInventario)
      Me.mMovimientoInventario = value
      Parame_Tipomovinv = value.Parame_Tipomovinv
      Pardet_Tipomovinv = value.Pardet_Tipomovinv
      Empres_Bodega = value.Empres_Bodega
      Sucurs_Bodega = value.Sucurs_Bodega
      Movinv_Secuencia = value.Movinv_Secuencia
    End Set
  End Property

  Public ReadOnly Property esCxC() As Boolean
    Get
      If Me.MovimientoInventario.Venta IsNot Nothing Then
        Return True
      End If
    End Get
  End Property

  Public ReadOnly Property esCxP() As Boolean
    Get
      If Me.MovimientoInventario.Compra IsNot Nothing Then
        Return True
      End If
    End Get
  End Property

  Public Property CuentaBancaria() As CuentaBancaria
    Get
      If mCuentaBancaria Is Nothing AndAlso Not Me.CtaBan_Numero = String.Empty Then
        mCuentaBancaria = New CuentaBancaria(New Empresa(OperadorDatos, Me.Empres_Bodega), Me.PardetBanco, Me.CtaBan_Numero)
      End If
      Return mCuentaBancaria
    End Get
    Set(ByVal value As CuentaBancaria)
      mCuentaBancaria = value
      If value IsNot Nothing Then
        Empres_Bodega = value.Empres_Codigo
        PardetBanco = value.PardetBanco
        Me.CtaBan_Numero = value.CtaBan_Numero
      End If
    End Set
  End Property

  'WWTSParametroDet
  Public Overridable Property PardetTipoMovPago() As WWTSParametroDet
    Get
      If Me.mPardetTipoMovPago Is Nothing AndAlso Pardet_TipoMovPago > 0 Then
        Me.mPardetTipoMovPago = New WWTSParametroDet(OperadorDatos, Parame_TipoMovPago, Pardet_TipoMovPago)
      End If
      Return Me.mPardetTipoMovPago
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTipoMovPago = value
      Parame_TipoMovPago = value.Parame_Codigo
      Pardet_TipoMovPago = value.Pardet_Secuencia
    End Set
  End Property

  Public ReadOnly Property TipoMovPagoString() As String
    Get
      If PardetTipoMovPago Is Nothing Then
        Return String.Empty
      Else
        Return mPardetTipoMovPago.Pardet_Descripcion
      End If
    End Get
  End Property

  Public Shadows Property Pardet_TipoMovPagoEnum() As Enumerados.enumTipoMovPagos
    Get
      Return CType(Pardet_TipoMovPago, Enumerados.enumTipoMovPagos)
    End Get
    Set(ByVal value As Enumerados.enumTipoMovPagos)
      Parame_TipoMovPago = CInt(Enumerados.EnumParametros.TipoMovPagos)
      Pardet_TipoMovPago = CInt(value)
    End Set
  End Property

  'WWTSParametroDet
  Public Overridable Property PardetBanco() As WWTSParametroDet
    Get
      If Me.mPardetBanco Is Nothing AndAlso Pardet_Banco > 0 Then
        Me.mPardetBanco = New WWTSParametroDet(OperadorDatos, Parame_Banco, Pardet_Banco)
      End If
      Return Me.mPardetBanco
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetBanco = value
      If value Is Nothing Then
        Parame_Banco = 0
        Pardet_Banco = 0
      Else
        Parame_Banco = value.Parame_Codigo
        Pardet_Banco = value.Pardet_Secuencia
      End If
    End Set
  End Property

  'WWTSParametroDet
  Public Overridable Property PardetTarjetaCredito() As WWTSParametroDet
    Get
      If Me.mPardetTarjetaCredito Is Nothing AndAlso Pardet_TarjetaCredito > 0 Then
        Me.mPardetTarjetaCredito = New WWTSParametroDet(OperadorDatos, Parame_TarjetaCredito, Pardet_TarjetaCredito)
      End If
      Return Me.mPardetTarjetaCredito
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetTarjetaCredito = value
      If value Is Nothing Then
        Parame_TarjetaCredito = 0
        Pardet_TarjetaCredito = 0
      Else
        Parame_TarjetaCredito = value.Parame_Codigo
        Pardet_TarjetaCredito = value.Pardet_Secuencia
      End If
    End Set
  End Property

  Public ReadOnly Property Establecimiento() As String
    Get
      Return Left(Me.Pagdet_CompteRetencion, 3)
    End Get
  End Property

  Public ReadOnly Property PuntoEmision() As String
    Get
      Return Me.Pagdet_CompteRetencion.Substring(4, 3)
    End Get
  End Property

  Public ReadOnly Property Secuencial() As String
    Get
      Return Me.Pagdet_CompteRetencion.Substring(8, 7)
    End Get
  End Property

  Public ReadOnly Property Descripcion() As String
    Get
      Dim _descripcion As String = ""
      Select Case Pardet_TipoMovPago
        Case Enumerados.enumTipoMovPagos.Retencionfuente, Enumerados.enumTipoMovPagos.RetencionIVA
          _descripcion = Pagdet_PorcAplicable.ToString("0.00") + "%"
        Case Enumerados.enumTipoMovPagos.Cheque
          If CuentaBancaria Is Nothing Then
            _descripcion = PardetBanco.Pardet_Descripcion
          Else
            _descripcion = String.Format("{0} {1}", PardetBanco.Pardet_Descripcion, CtaBan_Numero)
          End If
        Case Enumerados.enumTipoMovPagos.Documento
          If esCxC Then
            _descripcion = MovimientoInventario.Venta.Venta_Numero
          End If
          If esCxP Then
            _descripcion = MovimientoInventario.CompraVentaString
          End If
      End Select
      
      Return String.Format("{0} {1} {2}", PardetTipoMovPago.Pardet_Descripcion, _descripcion, Pagdet_Observacion)
    End Get
  End Property

  'Cuentacontable
  Public Overridable Property CuentaContable() As CuentaContable
    Get
      If mCuentacontable Is Nothing AndAlso Not CtaCtb_Codigo = String.Empty Then
        mCuentacontable = New CuentaContable(OperadorDatos, Me.CtaCtb_Codigo)
      End If
      Return Me.mCuentacontable
    End Get
    Set(ByVal value As CuentaContable)
      Me.mCuentacontable = value
      If value Is Nothing Then
        Me.CtaCtb_Codigo = String.Empty
      Else
        Me.CtaCtb_Codigo = value.CtaCtb_Codigo
      End If
    End Set
  End Property

  Public ReadOnly Property CuentaContableString() As String
    Get
      If CuentaContable Is Nothing Then
        Return String.Empty
      Else
        Return String.Format("{0} {1}", CtaCtb_Codigo, CuentaContable.CtaCtb_Descripcion)
      End If
    End Get
  End Property

  'Subcuentacontable
  Public Overridable Property SubCuentaContable() As WWTSParametroDet
    Get
      If mSubcuentacontable Is Nothing AndAlso Pardet_SubCuenta > 0 Then
        mSubcuentacontable = New WWTSParametroDet(OperadorDatos, Me.Parame_SubCuenta, Me.Pardet_SubCuenta)
      End If
      Return Me.mSubcuentacontable
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mSubcuentacontable = value
      If value Is Nothing Then
        Me.Pardet_SubCuenta = 0
      Else
        Me.Parame_SubCuenta = value.Parame_Codigo
        Me.Pardet_SubCuenta = value.Pardet_Secuencia
      End If
    End Set
  End Property

  Public Overridable ReadOnly Property SubCuentaContableString() As String
    Get
      If SubCuentaContable Is Nothing Then
        Return String.Empty
      Else
        Return mSubcuentacontable.Pardet_Descripcion
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_Tipomovinv = CType(Fila("Parame_Tipomovinv"), Integer)
    Pardet_Tipomovinv = CType(Fila("Pardet_Tipomovinv"), Integer)
    Empres_Bodega = CType(Fila("Empres_Bodega"), Integer)
    Sucurs_Bodega = CType(Fila("Sucurs_Bodega"), Integer)
    Movinv_Secuencia = CType(Fila("Movinv_Secuencia"), Integer)
    Pagdet_Secuencia = CType(Fila("Pagdet_Secuencia"), Integer)
    Parame_TipoMovPago = CType(Fila("Parame_TipoMovPago"), Integer) '**
    Pardet_TipoMovPago = CType(Fila("Pardet_TipoMovPago"), Integer) '**
    Pagdet_Observacion = CStr(Fila("Pagdet_Observacion")) '**
    Pagdet_FechaPago = CType(Fila("Pagdet_FechaPago"), Date) '**
    Pagdet_Valor = CType(Fila("Pagdet_Valor"), Decimal)

    Dim obj As Object
    Select Case Pardet_TipoMovPago
      Case Enumerados.enumTipoMovPagos.Cheque
        Parame_Banco = CType(Fila("Parame_Banco"), Integer)
        Pardet_Banco = CType(Fila("Pardet_Banco"), Integer)
        obj = Fila("CtaBan_Numero")
        If TypeOf obj Is DBNull Then
          CtaBan_Numero = ""
        Else
          CtaBan_Numero = CStr(obj)
        End If
        Pagdet_NumeroCheque = CType(Fila("Pagdet_NumeroCheque"), Integer)
        Pagdet_FechaCheque = CType(Fila("Pagdet_FechaCheque"), Date)
        Pagdet_Verificado = CBool(Fila("Pagdet_Verificado"))
      Case Enumerados.enumTipoMovPagos.Tarjetadecredito
        Parame_TarjetaCredito = CType(Fila("Parame_TarjetaCredito"), Integer)
        Pardet_TarjetaCredito = CType(Fila("Pardet_TarjetaCredito"), Integer)
        Pagdet_Voucher = CStr(Fila("Pagdet_Voucher"))
      Case Enumerados.enumTipoMovPagos.Retencionfuente
        SRI_conceptoretencion = CType(Fila("SRI_conceptoretencion"), String)
        Pagdet_BaseImponible = CType(Fila("Pagdet_BaseImponible"), Decimal)
        Pagdet_PorcAplicable = CDec(Fila("Pagdet_PorcAplicable"))
        Pagdet_CompteRetencion = CStr(Fila("Pagdet_CompteRetencion"))
        Pagdet_Autorizacion = CStr(Fila("Pagdet_Autorizacion"))
      Case Enumerados.enumTipoMovPagos.RetencionIVA
        Pagdet_esIVABienes = CBool(Fila("Pagdet_esIVABienes"))
        SRI_retencionIVA = CStr(Fila("SRI_retencionIVA"))
        Pagdet_BaseImponible = CType(Fila("Pagdet_BaseImponible"), Decimal)
        Pagdet_PorcAplicable = CType(Fila("Pagdet_PorcAplicable"), Decimal)
        Pagdet_CompteRetencion = CStr(Fila("Pagdet_CompteRetencion"))
        Pagdet_Autorizacion = CStr(Fila("Pagdet_Autorizacion"))
    End Select
    Try
      mCtaCtb_Codigo = CStr(Fila("CtaCtb_Codigo"))
    Catch ex As Exception
      mCtaCtb_Codigo = String.Empty
    End Try
    Try
      mParame_SubCuenta = CInt(Fila("Parame_SubCuenta"))
      mPardet_SubCuenta = CInt(Fila("Pardet_SubCuenta"))
    Catch ex As Exception
      mParame_SubCuenta = 0
      mPardet_SubCuenta = 0
    End Try
    mPagdet_esContabilizado = CBool(Fila("Pagdet_esContabilizado"))
    mMovimientoInventario = Nothing
    mPardetTipoMovPago = Nothing
    mPardetBanco = Nothing
    mPardetTarjetaCredito = Nothing
    mCuentaBancaria = Nothing
    mCuentacontable = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Pagdet_Secuencia", Pagdet_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    If Not EsNuevo And Not EsModificado Then
      Return True
    End If

    Dim Result As Integer = 0
    Dim bReturn As Boolean = True

    Dim _comenzotransaccion As Boolean = False
    If Not OperadorDatos.EstaenTransaccion Then
      OperadorDatos.ComenzarTransaccion()
      _comenzotransaccion = True
    End If

    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Pagdet_Secuencia", Pagdet_Secuencia)
    OperadorDatos.AgregarParametro("@Parame_TipoMovPago", Parame_TipoMovPago)
    OperadorDatos.AgregarParametro("@Pardet_TipoMovPago", Pardet_TipoMovPago)
    OperadorDatos.AgregarParametro("@Pagdet_Observacion", Pagdet_Observacion)
    OperadorDatos.AgregarParametro("@Pagdet_FechaPago", Pagdet_FechaPago)
    OperadorDatos.AgregarParametro("@Pagdet_Valor", Pagdet_Valor)

    Select Case Pardet_TipoMovPago
      Case Enumerados.enumTipoMovPagos.Cheque
        OperadorDatos.AgregarParametro("@Parame_Banco", Parame_Banco)
        OperadorDatos.AgregarParametro("@Pardet_Banco", Pardet_Banco)
        If Not CtaBan_Numero.Trim = String.Empty Then
          OperadorDatos.AgregarParametro("@CtaBan_Numero", CtaBan_Numero)
        End If
        OperadorDatos.AgregarParametro("@Pagdet_NumeroCheque", Pagdet_NumeroCheque)
        OperadorDatos.AgregarParametro("@Pagdet_FechaCheque", Pagdet_FechaCheque)
        OperadorDatos.AgregarParametro("@Pagdet_Verificado", Pagdet_Verificado)
      Case Enumerados.enumTipoMovPagos.Tarjetadecredito
        OperadorDatos.AgregarParametro("@Parame_TarjetaCredito", Parame_TarjetaCredito)
        OperadorDatos.AgregarParametro("@Pardet_TarjetaCredito", Pardet_TarjetaCredito)
        OperadorDatos.AgregarParametro("@Pagdet_Voucher", Pagdet_Voucher)
      Case Enumerados.enumTipoMovPagos.Retencionfuente
        OperadorDatos.AgregarParametro("@SRI_conceptoretencion", SRI_conceptoretencion)
        OperadorDatos.AgregarParametro("@Pagdet_BaseImponible", Pagdet_BaseImponible)
        OperadorDatos.AgregarParametro("@Pagdet_PorcAplicable", Pagdet_PorcAplicable)
        OperadorDatos.AgregarParametro("@Pagdet_CompteRetencion", Pagdet_CompteRetencion)
        OperadorDatos.AgregarParametro("@Pagdet_Autorizacion", Pagdet_Autorizacion)
      Case Enumerados.enumTipoMovPagos.RetencionIVA
        OperadorDatos.AgregarParametro("@Pagdet_esIVABienes", Pagdet_esIVABienes)
        OperadorDatos.AgregarParametro("@SRI_retencionIVA", SRI_retencionIVA)
        OperadorDatos.AgregarParametro("@Pagdet_BaseImponible", Pagdet_BaseImponible)
        OperadorDatos.AgregarParametro("@Pagdet_PorcAplicable", Pagdet_PorcAplicable)
        OperadorDatos.AgregarParametro("@Pagdet_CompteRetencion", Pagdet_CompteRetencion)
        OperadorDatos.AgregarParametro("@Pagdet_Autorizacion", Pagdet_Autorizacion)
    End Select
    If Not CtaCtb_Codigo = String.Empty Then
      OperadorDatos.AgregarParametro("@CtaCtb_Codigo", CtaCtb_Codigo)
    End If
    If Parame_SubCuenta > 0 Then
      OperadorDatos.AgregarParametro("@Parame_SubCuenta", Parame_SubCuenta)
      OperadorDatos.AgregarParametro("@Pardet_SubCuenta", Pardet_SubCuenta)
    End If
    OperadorDatos.AgregarParametro("@Pagdet_esContabilizado", Pagdet_esContabilizado)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Pagdet_Secuencia = Result
      End If

      Try
        Select Case Pardet_TipoMovPago
          Case Enumerados.enumTipoMovPagos.RetencionIVA, Enumerados.enumTipoMovPagos.Retencionfuente
            Me.MovimientoInventario.Compra.Proveedor.Entidad.Entida_AutorizacionRetencion = Pagdet_Autorizacion
            Me.MovimientoInventario.Compra.Proveedor.Entidad.Guardar()
        End Select
      Catch ex As Exception

      End Try

      If Not OperadorDatos.EstaenTransaccion Then
        EsNuevo = False
        EsModificado = False
      End If
    End If

    If _comenzotransaccion Then
      If bReturn Then
        OperadorDatos.TerminarTransaccion()
        AceptarCambios()
      Else
        OperadorDatos.CancelarTransaccion()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Function AceptarCambios() As Boolean
    EsNuevo = False
    EsModificado = False
  End Function

  Public Overridable Function Eliminar() As Boolean
    If EsNuevo Then
      Return True
    End If

    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_Tipomovinv", Parame_Tipomovinv)
    OperadorDatos.AgregarParametro("@Pardet_Tipomovinv", Pardet_Tipomovinv)
    OperadorDatos.AgregarParametro("@Empres_Bodega", Empres_Bodega)
    OperadorDatos.AgregarParametro("@Sucurs_Bodega", Sucurs_Bodega)
    OperadorDatos.AgregarParametro("@Movinv_Secuencia", Movinv_Secuencia)
    OperadorDatos.AgregarParametro("@Pagdet_Secuencia", Pagdet_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "PagosDetList"
Public Class PagosDetList
  Inherits System.ComponentModel.BindingList(Of PagosDet)

  Public Shared Function ObtenerLista(ByVal _MovimientoInventario As MovimientoInventario) As PagosDetList
    Dim oResult As PagosDetList = New PagosDetList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _MovimientoInventario.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Parame_Tipomovinv", _MovimientoInventario.Parame_Tipomovinv)
      .AgregarParametro("@Pardet_Tipomovinv", _MovimientoInventario.Pardet_Tipomovinv)
      .AgregarParametro("@Empres_Bodega", _MovimientoInventario.Empres_Bodega)
      .AgregarParametro("@Sucurs_Bodega", _MovimientoInventario.Sucurs_Bodega)
      .AgregarParametro("@Movinv_Secuencia", _MovimientoInventario.Movinv_Secuencia)
      .Procedimiento = "proc_PagosDet"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PagosDet(_MovimientoInventario, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
