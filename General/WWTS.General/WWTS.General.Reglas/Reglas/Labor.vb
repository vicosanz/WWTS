'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.42
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General


#Region "Labor"
Public Class Labor

  Const _Procedimiento As String = "proc_Labor"

  Private mPardetSeccion As WWTSParametroDet = Nothing

  Private mPardetModeloLabor As WWTSParametroDet = Nothing

  Private mPardetCargoSeccion As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_Seccion As Integer, ByVal _Pardet_Seccion As Integer, ByVal _Labor_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Parame_Seccion = _Parame_Seccion
    Pardet_Seccion = _Pardet_Seccion
    Labor_Codigo = _Labor_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Labor")
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _PardetSeccion As WWTSParametroDet, ByVal _Labor_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Seccion = _PardetSeccion
    Labor_Codigo = _Labor_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Labor")
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _PardetSeccion As WWTSParametroDet)
    Me.New(_OperadorDatos, True)
    Seccion = _PardetSeccion
  End Sub

  'Seccion
  Public Overridable Property Seccion() As WWTSParametroDet
    Get
      If mPardetSeccion Is Nothing AndAlso Me.Pardet_Seccion <> 0 Then
        mPardetSeccion = New WWTSParametroDet(OperadorDatos, Parame_Seccion, Pardet_Seccion)
      End If
      Return Me.mPardetSeccion
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetSeccion = value
      Parame_Seccion = value.Parame_Codigo
      Pardet_Seccion = value.Pardet_Secuencia
    End Set
  End Property

  Public ReadOnly Property CodigoLargo() As Integer
    Get
      Return Pardet_Seccion * 1000 + Me.Labor_Codigo
    End Get
  End Property

  Public ReadOnly Property DescripcionLarga() As String
    Get
      If Seccion Is Nothing Then
        Return Me.Labor_Descripcion
      Else
        Return String.Format("{0} - {1}", Seccion.Pardet_Descripcion, Me.Labor_Descripcion)
      End If
    End Get
  End Property

  'Modelolabor
  Public Overridable Property PardetModeloLabor() As WWTSParametroDet
    Get
      If Me.mPardetModeloLabor Is Nothing AndAlso Pardet_ModeloLabor > 0 Then
        Me.mPardetModeloLabor = New WWTSParametroDet(OperadorDatos, Parame_ModeloLabor, Pardet_ModeloLabor)
      End If
      Return Me.mPardetModeloLabor
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetModeloLabor = value
      Parame_ModeloLabor = value.Parame_Codigo
      Pardet_ModeloLabor = value.Pardet_Secuencia
    End Set
  End Property

  'CargoSeccion
  Public Overridable Property PardetCargoSeccion() As WWTSParametroDet
    Get
      If Me.mPardetCargoSeccion Is Nothing AndAlso Pardet_CargoSeccion > 0 Then
        Me.mPardetCargoSeccion = New WWTSParametroDet(OperadorDatos, Parame_CargoSeccion, Pardet_CargoSeccion)
      End If
      Return Me.mPardetCargoSeccion
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetCargoSeccion = value
      Parame_CargoSeccion = value.Parame_Codigo
      Pardet_CargoSeccion = value.Pardet_Secuencia
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_Seccion = CType(Fila("Parame_Seccion"), Integer)
    Pardet_Seccion = CType(Fila("Pardet_Seccion"), Integer)
    Labor_Codigo = CType(Fila("Labor_Codigo"), Integer)
    Labor_Descripcion = CType(Fila("Labor_Descripcion"), String)
    Parame_ModeloLabor = CType(Fila("Parame_ModeloLabor"), Integer)
    Pardet_ModeloLabor = CType(Fila("Pardet_ModeloLabor"), Integer)
    Parame_CargoSeccion = CType(Fila("Parame_CargoSeccion"), Integer)
    Pardet_CargoSeccion = CType(Fila("Pardet_CargoSeccion"), Integer)
    Labor_ControlarHorasExtras = CBool(Fila("Labor_ControlarHorasExtras"))
    mPardetSeccion = Nothing
    mPardetModeloLabor = Nothing
    mPardetCargoSeccion = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_Seccion", Parame_Seccion)
    OperadorDatos.AgregarParametro("@Pardet_Seccion", Pardet_Seccion)
    OperadorDatos.AgregarParametro("@Labor_Codigo", Labor_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_Seccion", Parame_Seccion)
    OperadorDatos.AgregarParametro("@Pardet_Seccion", Pardet_Seccion)
    OperadorDatos.AgregarParametro("@Labor_Codigo", Labor_Codigo)
    OperadorDatos.AgregarParametro("@Labor_Descripcion", Labor_Descripcion)
    OperadorDatos.AgregarParametro("@Parame_ModeloLabor", Parame_ModeloLabor)
    OperadorDatos.AgregarParametro("@Pardet_ModeloLabor", Pardet_ModeloLabor)
    OperadorDatos.AgregarParametro("@Parame_CargoSeccion", Parame_CargoSeccion)
    OperadorDatos.AgregarParametro("@Pardet_CargoSeccion", Pardet_CargoSeccion)
    OperadorDatos.AgregarParametro("@Labor_ControlarHorasExtras", Labor_ControlarHorasExtras)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Labor_Codigo = Result
      End If
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_Seccion", Parame_Seccion)
    OperadorDatos.AgregarParametro("@Pardet_Seccion", Pardet_Seccion)
    OperadorDatos.AgregarParametro("@Labor_Codigo", Labor_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "LaborList"
Public Class LaborList
  Inherits System.ComponentModel.BindingList(Of Labor)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _PardetSeccion As WWTSParametroDet = Nothing, Optional ByVal _filtro As String = "") As LaborList
    Dim oResult As LaborList = New LaborList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      If _PardetSeccion IsNot Nothing Then
        .AgregarParametro("@Parame_Seccion", _PardetSeccion.Parame_Codigo)
        .AgregarParametro("@Pardet_Seccion", _PardetSeccion.Pardet_Secuencia)
      End If
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Labor"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Labor(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
