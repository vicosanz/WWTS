'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General
Imports WWTS.General.Reglas.Enumerados

#Region "TipoContrato"
Public Class TipoContrato

  Const _Procedimiento As String = "proc_TipoContrato"

  Private mPardetPeriodoPago As WWTSParametroDet = Nothing

  Private mPardetTipoContrato As WWTSParametroDet = Nothing

  Private mPatrono As Patrono

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Patron_Codigo As Integer, ByVal _TipCon_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    TipCon_Codigo = _TipCon_Codigo
    Patron_Codigo = _Patron_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto TipoContrato")
    End If
  End Sub

  Public Shadows Property Pardet_TipoContratoEnum() As Enumerados.enumTipoContrato
    Get
      Return CType(Pardet_TipoContrato, Enumerados.enumTipoContrato)
    End Get
    Set(ByVal value As Enumerados.enumTipoContrato)
      Pardet_TipoContrato = CInt(value)
    End Set
  End Property

  Public Property PardetTipoContrato() As WWTSParametroDet
    Get
      If mPardetTipoContrato Is Nothing AndAlso Pardet_TipoContrato <> 0 Then
        mPardetTipoContrato = New WWTSParametroDet(OperadorDatos, Me.Parame_TipoContrato, Me.Pardet_TipoContrato)
      End If
      Return mPardetTipoContrato
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetTipoContrato = value
      Parame_TipoContrato = value.Parame_Codigo
      Pardet_TipoContrato = value.Pardet_Secuencia
    End Set
  End Property

  Public Shadows Property Pardet_PeriodoPagoEnum() As Enumerados.enumPeriodoPago
    Get
      Return CType(Pardet_PeriodoPago, Enumerados.enumPeriodoPago)
    End Get
    Set(ByVal value As Enumerados.enumPeriodoPago)
      Pardet_PeriodoPago = CInt(value)
    End Set
  End Property

  Public Property PardetPeriodoPago() As WWTSParametroDet
    Get
      If mPardetPeriodoPago Is Nothing AndAlso Pardet_PeriodoPago <> 0 Then
        mPardetPeriodoPago = New WWTSParametroDet(OperadorDatos, Me.Parame_PeriodoPago, Me.Pardet_PeriodoPago)
      End If
      Return mPardetPeriodoPago
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetPeriodoPago = value
      Parame_PeriodoPago = value.Parame_Codigo
      Pardet_PeriodoPago = value.Pardet_Secuencia
    End Set
  End Property

  Public Property Patrono() As Patrono
    Get
      If mPatrono Is Nothing AndAlso Patron_Codigo > 0 Then
        mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return mPatrono
    End Get
    Set(value As Patrono)
      mPatrono = value
      Patron_Codigo = value.Patron_Codigo
    End Set
  End Property

#Region "TipoContratoFormatos"
  Private WithEvents mTipoContratoFormatos As TipoContratoFormatoList = Nothing

  Public Property TipoContratoFormatos() As TipoContratoFormatoList
    Get
      If mTipoContratoFormatos Is Nothing Then
        If EsNuevo Then
          mTipoContratoFormatos = New TipoContratoFormatoList
          For Each _modulo As ParametroDet In WWTSParametroDetList.ObtenerLista(OperadorDatos, Enumerados.EnumParametros.TipoContratoFormato)
            Dim _tipconformato As New TipoContratoFormato(OperadorDatos, True)
            _tipconformato.Patron_Codigo = Patron_Codigo
            _tipconformato.PardetFormato = _modulo
            mTipoContratoFormatos.Add(_tipconformato)
          Next
        Else
          mTipoContratoFormatos = TipoContratoFormatoList.ObtenerLista(OperadorDatos, Patron_Codigo, TipCon_Codigo)
        End If
      End If
      Return mTipoContratoFormatos
    End Get
    Set(ByVal value As TipoContratoFormatoList)
      mTipoContratoFormatos = value
    End Set
  End Property
#End Region

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Patron_Codigo = CType(Fila("Patron_Codigo"), Integer)
    TipCon_Codigo = CType(Fila("TipCon_Codigo"), Integer)
    Parame_PeriodoPago = CType(Fila("Parame_PeriodoPago"), String)
    Pardet_PeriodoPago = CType(Fila("Pardet_PeriodoPago"), Integer)
    TipCon_Descripcion = CType(Fila("TipCon_Descripcion"), String)
    Parame_TipoContrato = CType(Fila("Parame_TipoContrato"), Integer)
    Pardet_TipoContrato = CType(Fila("Pardet_TipoContrato"), Integer)
    TipCon_Caducidadmeses = CType(Fila("TipCon_Caducidadmeses"), Integer)
    'TipCon_Contrato = CType(Fila("TipCon_Contrato"), String)
    'Try
    '  TipCon_Renuncia = CType(Fila("TipCon_Renuncia"), String)
    'Catch ex As Exception
    '  TipCon_Renuncia = ""
    'End Try
    'Try
    '  TipCon_Despido = CType(Fila("TipCon_Despido"), String)
    'Catch ex As Exception
    '  TipCon_Despido = ""
    'End Try
    'Try
    '  TipCon_Suspension = CType(Fila("TipCon_Suspension"), String)
    'Catch ex As Exception
    '  TipCon_Suspension = ""
    'End Try
    'Try
    '  TipCon_LlamadaAtencion = CType(Fila("TipCon_LlamadaAtencion"), String)
    'Catch ex As Exception
    '  TipCon_LlamadaAtencion = ""
    'End Try
    'Try
    '  TipCon_CertificadoTrabajo = CType(Fila("TipCon_CertificadoTrabajo"), String)
    'Catch ex As Exception
    '  TipCon_CertificadoTrabajo = ""
    'End Try
    TipCon_FichaRojaRenuncia = CType(Fila("TipCon_FichaRojaRenuncia"), Boolean)
    TipCon_FichaRojaDespido = CType(Fila("TipCon_FichaRojaDespido"), Boolean)
    TipCon_TurnosRotativos = CBool(Fila("TipCon_TurnosRotativos"))

    Try
      TipCon_HorasDiarias = CType(Fila("TipCon_HorasDiarias"), Integer)
    Catch ex As Exception
      TipCon_HorasDiarias = 0
    End Try
    Try
      TipCon_HorasSemanales = CType(Fila("TipCon_HorasSemanales"), Integer)
    Catch ex As Exception
      TipCon_HorasSemanales = 0
    End Try

    mPardetTipoContrato = Nothing
    mPardetPeriodoPago = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If

    Dim _comenzotransaccion As Boolean = False
    If Not OperadorDatos.EstaenTransaccion Then
      OperadorDatos.ComenzarTransaccion()
      _comenzotransaccion = True
    End If

    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.AgregarParametro("@TipCon_Descripcion", TipCon_Descripcion)
    OperadorDatos.AgregarParametro("@Parame_TipoContrato", Parame_TipoContrato)
    OperadorDatos.AgregarParametro("@Pardet_TipoContrato", Pardet_TipoContrato)
    OperadorDatos.AgregarParametro("@TipCon_Caducidadmeses", TipCon_Caducidadmeses)
    'OperadorDatos.AgregarParametro("@TipCon_Contrato", TipCon_Contrato)
    'OperadorDatos.AgregarParametro("@TipCon_Renuncia", TipCon_Renuncia)
    'OperadorDatos.AgregarParametro("@TipCon_Despido", TipCon_Despido)
    'OperadorDatos.AgregarParametro("@TipCon_Suspension", TipCon_Suspension)
    'OperadorDatos.AgregarParametro("@TipCon_LlamadaAtencion", TipCon_LlamadaAtencion)
    'OperadorDatos.AgregarParametro("@TipCon_CertificadoTrabajo", TipCon_CertificadoTrabajo)
    OperadorDatos.AgregarParametro("@TipCon_FichaRojaRenuncia", TipCon_FichaRojaRenuncia)
    OperadorDatos.AgregarParametro("@TipCon_FichaRojaDespido", TipCon_FichaRojaDespido)
    OperadorDatos.AgregarParametro("@TipCon_TurnosRotativos", TipCon_TurnosRotativos)
    OperadorDatos.AgregarParametro("@TipCon_HorasDiarias", TipCon_HorasDiarias)
    OperadorDatos.AgregarParametro("@TipCon_HorasSemanales", TipCon_HorasSemanales)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        TipCon_Codigo = Result
      End If

      For Each _tipconformato As TipoContratoFormato In TipoContratoFormatos
        _tipconformato.Patron_Codigo = Patron_Codigo
        _tipconformato.TipCon_Codigo = TipCon_Codigo
        If Not _tipconformato.Guardar() Then
          bReturn = False
          Exit For
        End If
      Next

      If Not OperadorDatos.EstaenTransaccion Then
        EsNuevo = False
        EsModificado = False
      End If
    End If

    If _comenzotransaccion Then
      If bReturn Then
        OperadorDatos.TerminarTransaccion()
        AceptarCambios()
      Else
        OperadorDatos.CancelarTransaccion()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Function AceptarCambios() As Boolean
    EsNuevo = False
    EsModificado = False

    For Each _tipconformato As TipoContratoFormato In TipoContratoFormatos
      _tipconformato.AceptarCambios()
    Next
    Return True
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "TipoContratoList"
Public Class TipoContratoList
  Inherits System.ComponentModel.BindingList(Of TipoContrato)
  Public Shared Function ObtenerLista(ByVal _Patrono As Patrono, Optional ByVal _filtro As String = "") As TipoContratoList
    Dim oResult As TipoContratoList = New TipoContratoList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Patrono.OperadorDatos
      .AgregarParametro("@accion", "F")
      .AgregarParametro("@Patron_Codigo", _Patrono.Patron_Codigo)
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_TipoContrato"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New TipoContrato(_Patrono.OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
