'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General

#Region "CargasxEmpleado"
Public Class CargasxEmpleado

  Const _Procedimiento As String = "proc_CargasxEmpleado"

  Private mEmpleado As Empleado = Nothing

  Private mEntidadnaturalPariente As EntidadNatural = Nothing

  Private mParameTipoCarga As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Empleado As Empleado, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    Empleado = _Empleado
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Empleado As Empleado, ByVal _CarEmp_Secuencia As Integer)
    Me.New(_OperadorDatos, _Empleado, False)
    CarEmp_Secuencia = _CarEmp_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto CargasxEmpleado")
    End If
  End Sub

  'Empleado
  Public Overridable Property Empleado() As Empleado
    Get
      If Me.mEmpleado Is Nothing AndAlso Entida_Codigo > 0 Then
        Me.mEmpleado = New Empleado(OperadorDatos, Entida_Codigo)
      End If
      Return Me.mEmpleado
    End Get
    Set(ByVal value As Empleado)
      Me.mEmpleado = value
      Entida_Codigo = value.Entida_Codigo
    End Set
  End Property

  'Entidadnatural
  Public Overridable Property EntidadnaturalPariente() As EntidadNatural
    Get
      If Me.mEntidadnaturalPariente Is Nothing AndAlso Entida_Carga > 0 Then
        Me.mEntidadnaturalPariente = New EntidadNatural(OperadorDatos, Entida_Carga)
      End If
      Return Me.mEntidadnaturalPariente
    End Get
    Set(ByVal value As EntidadNatural)
      Me.mEntidadnaturalPariente = value
      Entida_Carga = value.Entida_Codigo
    End Set
  End Property

  Public ReadOnly Property NombreCompletoPariente() As String
    Get
      If EntidadnaturalPariente Is Nothing Then
        Return String.Empty
      Else
        Return EntidadnaturalPariente.NombreCompleto
      End If
    End Get
  End Property

  'Parametrodet
  Public Overridable Property ParameTipoCarga() As WWTSParametroDet
    Get
      If Me.mParameTipoCarga Is Nothing AndAlso Pardet_TipoCarga > 0 Then
        Me.mParameTipoCarga = New WWTSParametroDet(OperadorDatos, Parame_TipoCarga, Me.Pardet_TipoCarga)
      End If
      Return Me.mParameTipoCarga
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mParameTipoCarga = value
      Parame_TipoCarga = value.Parame_Codigo
      Pardet_TipoCarga = value.Pardet_Secuencia
    End Set
  End Property

  Public ReadOnly Property TipoCargaString() As String
    Get
      If ParameTipoCarga Is Nothing Then
        Return String.Empty
      Else
        Return ParameTipoCarga.Pardet_Descripcion
      End If
    End Get
  End Property

  Public ReadOnly Property EdadPariente() As Integer
    Get
      If EntidadnaturalPariente Is Nothing Then
        Return -1
      Else
        Return EntidadnaturalPariente.Edad
      End If
    End Get
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    CarEmp_Secuencia = CType(Fila("CarEmp_Secuencia"), Integer)
    Parame_TipoCarga = CType(Fila("Parame_TipoCarga"), Integer)
    Pardet_TipoCarga = CType(Fila("Pardet_TipoCarga"), Integer)
    Entida_Carga = CType(Fila("Entida_Carga"), Integer)
    CarEmp_estaSeguroCorporativo = CType(Fila("CarEmp_estaSeguroCorporativo"), Boolean)
    mEmpleado = Nothing
    mEntidadnaturalPariente = Nothing
    mParameTipoCarga = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.datatable = New System.Data.datatable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@CarEmp_Secuencia", CarEmp_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@CarEmp_Secuencia", CarEmp_Secuencia)
    OperadorDatos.AgregarParametro("@Parame_TipoCarga", Parame_TipoCarga)
    OperadorDatos.AgregarParametro("@Pardet_TipoCarga", Pardet_TipoCarga)
    OperadorDatos.AgregarParametro("@Entida_Carga", Entida_Carga)
    OperadorDatos.AgregarParametro("@CarEmp_estaSeguroCorporativo", CarEmp_estaSeguroCorporativo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@CarEmp_Secuencia", CarEmp_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "CargasxEmpleadoList"
Public Class CargasxEmpleadoList
  Inherits System.ComponentModel.BindingList(Of CargasxEmpleado)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, ByVal _Empleado As Empleado, Optional ByVal _filtro As String = "") As CargasxEmpleadoList
    Dim oResult As CargasxEmpleadoList = New CargasxEmpleadoList
    Dim bReturn As Boolean
    Dim ds As datatable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Entida_Codigo", _Empleado.Entida_Codigo)
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_CargasxEmpleado"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New CargasxEmpleado(_OperadorDatos, _Empleado, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
