'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "PrestamoDet"
Public Class PrestamoDet

  Const _Procedimiento As String = "proc_PrestamoDet"

  Private mPrestamo As Prestamo = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Prestamo As Prestamo)
    Me.New(_Prestamo.OperadorDatos, True)
    Prestamo = _Prestamo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Entida_Codigo As Integer, ByVal _Presta_Secuencia As Integer, ByVal _DetPre_Secuencia As Integer)
    Me.New(_OperadorDatos, False)
    Entida_Codigo = _Entida_Codigo
    Presta_Secuencia = _Presta_Secuencia
    DetPre_Secuencia = _DetPre_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto PrestamoDet")
    End If
  End Sub

  'Prestamo
  Public Overridable Property Prestamo() As Prestamo
    Get
      If Me.mPrestamo Is Nothing AndAlso Entida_Codigo > 0 Then
        Me.mPrestamo = New Prestamo(OperadorDatos, Entida_Codigo, Patron_Codigo, Contra_Secuencia, Presta_Secuencia)
      End If
      Return Me.mPrestamo
    End Get
    Set(ByVal value As Prestamo)
      Me.mPrestamo = value
      Entida_Codigo = value.Entida_Codigo
      Patron_Codigo = value.Patron_Codigo
      Contra_Secuencia = value.Contra_Secuencia
      Presta_Secuencia = value.Presta_Secuencia
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    Patron_Codigo = CInt(Fila("Patron_Codigo"))
    Contra_Secuencia = CInt(Fila("Contra_Secuencia"))
    Presta_Secuencia = CType(Fila("Presta_Secuencia"), Integer)
    DetPre_Secuencia = CType(Fila("DetPre_Secuencia"), Integer)
    DetPre_Valor = CType(Fila("DetPre_Valor"), Decimal)
    DetPre_Fecha = CType(Fila("DetPre_Fecha"), Date)
    mPrestamo = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Contra_Secuencia", Contra_Secuencia)
    OperadorDatos.AgregarParametro("@Presta_Secuencia", Presta_Secuencia)
    OperadorDatos.AgregarParametro("@DetPre_Secuencia", DetPre_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If esNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Contra_Secuencia", Contra_Secuencia)
    OperadorDatos.AgregarParametro("@Presta_Secuencia", Presta_Secuencia)
    OperadorDatos.AgregarParametro("@DetPre_Secuencia", DetPre_Secuencia)
    OperadorDatos.AgregarParametro("@DetPre_Valor", DetPre_Valor)
    OperadorDatos.AgregarParametro("@DetPre_Fecha", DetPre_Fecha)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        DetPre_Secuencia = Result
      End If
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Contra_Secuencia", Contra_Secuencia)
    OperadorDatos.AgregarParametro("@Presta_Secuencia", Presta_Secuencia)
    OperadorDatos.AgregarParametro("@DetPre_Secuencia", DetPre_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "PrestamoDetList"
Public Class PrestamoDetList
  Inherits System.ComponentModel.BindingList(Of PrestamoDet)

  Public Shared Function ObtenerLista(ByVal _Prestamo As Prestamo) As PrestamoDetList
    Dim oResult As PrestamoDetList = New PrestamoDetList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Prestamo.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Entida_Codigo", _Prestamo.Entida_Codigo)
      .AgregarParametro("@Patron_Codigo", _Prestamo.Patron_Codigo)
      .AgregarParametro("@Contra_Secuencia", _Prestamo.Contra_Secuencia)
      .AgregarParametro("@Presta_Secuencia", _Prestamo.Presta_Secuencia)
      .Procedimiento = "proc_PrestamoDet"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PrestamoDet(_Prestamo.OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _Contrato As Contrato, ByVal _fecha As Date) As PrestamoDetList
    Dim oResult As New PrestamoDetList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _Contrato.OperadorDatos
      .AgregarParametro("@accion", "FF")
      .AgregarParametro("@Entida_Codigo", _Contrato.Entida_Codigo)
      .AgregarParametro("@Patron_Codigo", _Contrato.Patron_Codigo)
      .AgregarParametro("@Contra_Secuencia", _Contrato.Contra_Secuencia)
      .AgregarParametro("@DetPre_Fecha", _fecha)
      .Procedimiento = "proc_PrestamoDet"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New PrestamoDet(_Contrato.OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _Contrato As Contrato, ByVal _fecha As Date, ByVal _tipoprestamo As Enumerados.enumTipoPrestamo) As PrestamoDetList
    Dim oResult As New PrestamoDetList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _Contrato.OperadorDatos
      .AgregarParametro("@accion", "FF")
      .AgregarParametro("@Entida_Codigo", _Contrato.Entida_Codigo)
      .AgregarParametro("@Patron_Codigo", _Contrato.Patron_Codigo)
      .AgregarParametro("@Contra_Secuencia", _Contrato.Contra_Secuencia)
      .AgregarParametro("@DetPre_Fecha", _fecha)
      .AgregarParametro("@Pardet_TipoPrestamo", _tipoprestamo)
      .Procedimiento = "proc_PrestamoDet"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New PrestamoDet(_Contrato.OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
