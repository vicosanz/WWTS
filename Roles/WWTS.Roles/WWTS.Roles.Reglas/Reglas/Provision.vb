'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports Infoware.Reglas.General
Imports WWTS.General.Reglas

#Region "Provision"
Public Class Provision

  Const _Procedimiento As String = "proc_Provision"

  Private mPatrono As Patrono = Nothing

  'Patrono
  Public Overridable Property Patrono() As Patrono
    Get
      If Me.mPatrono Is Nothing AndAlso Patron_Codigo > 0 Then
        Me.mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return Me.mPatrono
    End Get
    Set(ByVal value As Patrono)
      Me.mPatrono = value
      Patron_Codigo = value.Patron_Codigo
    End Set
  End Property

  Public Sub New(ByVal _Patrono As Patrono, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _Patrono.OperadorDatos
    Patrono = _Patrono
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Patrono As Patrono, ByVal _Provis_Secuencia As Integer)
    Me.New(_Patrono, False)
    Provis_Secuencia = _Provis_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Provision")
    End If
  End Sub

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Patron_Codigo = CType(Fila("Patron_Codigo"), Integer)
    Provis_Secuencia = CType(Fila("Provis_Secuencia"), Integer)
    Provis_Observacion = CType(Fila("Provis_Observacion"), String)
    Provis_Fecha = CDate(Fila("Provis_Fecha"))
    Provis_Valor = CDec(Fila("Provis_Valor"))
    mPatrono = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Provis_Secuencia", Provis_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    If String.IsNullOrWhiteSpace(mProvis_Observacion) OrElse mProvis_Valor = 0 Then
      Return False
    End If

    Dim _comenzotransaccion As Boolean = False
    If Not OperadorDatos.EstaenTransaccion Then
      OperadorDatos.ComenzarTransaccion()
      _comenzotransaccion = True
    End If

    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Provis_Secuencia", Provis_Secuencia)
    OperadorDatos.AgregarParametro("@Provis_Observacion", Provis_Observacion)
    OperadorDatos.AgregarParametro("@Provis_Fecha", Provis_Fecha)
    OperadorDatos.AgregarParametro("@Provis_Valor", Provis_Valor)

    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Provis_Secuencia = Result
      End If

      If Not OperadorDatos.EstaenTransaccion Then
        EsNuevo = False
        EsModificado = False
      End If
    End If

    If _comenzotransaccion Then
      If bReturn Then
        OperadorDatos.TerminarTransaccion()
        AceptarCambios()
      Else
        OperadorDatos.CancelarTransaccion()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Function AceptarCambios() As Boolean
    EsNuevo = False
    EsModificado = False
    Return True
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@Provis_Secuencia", Provis_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "ProvisionList"
Public Class ProvisionList
  Inherits System.ComponentModel.BindingList(Of Provision)
  Public Shared Function ObtenerLista(ByVal _Patrono As Patrono, _Desde As Date, _hasta As Date, Optional ByVal _filtro As String = "") As ProvisionList
    Dim oResult As ProvisionList = New ProvisionList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Patrono.OperadorDatos
      .AgregarParametro("@accion", "F")
      .AgregarParametro("@Patron_Codigo", _Patrono.Patron_Codigo)
      If Not _Desde = Nothing Then
        .AgregarParametro("@Fecdesde", _Desde)
        .AgregarParametro("@fechasta", _hasta)
      End If
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Provision"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Provision(_Patrono, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
