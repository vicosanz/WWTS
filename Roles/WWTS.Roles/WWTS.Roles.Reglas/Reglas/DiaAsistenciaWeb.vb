'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.832
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "DiaAsistenciaWeb"
Public Class DiaAsistenciaWeb

  Const _Procedimiento As String = "proc_DiaAsistenciaWeb"

  Private mPatrono As Patrono = Nothing

  Private mEmpleado As Empleado = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Empleado As Empleado, ByVal _Patrono As Patrono, ByVal _DiaAsi_Fecha As Date)
    Me.New(_OperadorDatos, False)
    Me.Empleado = _Empleado
    Me.Patrono = _Patrono
    Me.DiaAsi_Fecha = _DiaAsi_Fecha

    If Not Me.Recargar Then
      EsNuevo = True
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Entida_Codigo As Integer, ByVal _Patron_Codigo As Integer, ByVal _DiaAsi_Fecha As Date)
    Me.New(_OperadorDatos, False)
    Entida_Codigo = _Entida_Codigo
    Patron_Codigo = _Patron_Codigo
    DiaAsi_Fecha = _DiaAsi_Fecha
    If Me.Recargar Then
    Else
      'Throw New System.Exception("No se puede cargar objeto DiaAsistenciaWeb")
    End If
  End Sub

  Public Overridable Property Patrono() As Patrono
    Get
      If mPatrono Is Nothing And Patron_Codigo <> 0 Then
        mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return mPatrono
    End Get
    Set(ByVal value As Patrono)
      Patron_Codigo = value.Patron_Codigo
      mPatrono = value
    End Set
  End Property

  Public Overridable Property Empleado() As Empleado
    Get
      If mEmpleado Is Nothing AndAlso Entida_Codigo <> 0 Then
        mEmpleado = New Empleado(OperadorDatos, Entida_Codigo)
      End If
      Return mEmpleado
    End Get
    Set(ByVal value As Empleado)
      mEmpleado = value
      Entida_Codigo = value.Entida_Codigo
    End Set
  End Property

  Private mDiAsWe_Horas As Integer = 0
  Private mDiAsWe_H0 As Integer = 0
  Private mDiAsWe_H25 As Integer = 0
  Private mDiAsWe_H50 As Integer = 0
  Private mDiAsWe_H100 As Integer = 0
  Private mDiAsWe_H100b As Integer = 0
  Private mDiAsWe_HLibre As Integer = 0

  Private Sub Calcular_Horas()
    If DiaAsi_HorasCalculadas Then
      Exit Sub
    End If
    mDiAsWe_Horas = Hora_Salida.Subtract(Hora_Entrada).TotalHours
    Dim horas As Integer = mDiAsWe_Horas
    Dim hora As Integer = Hora_Entrada.Hour

    Dim horasxdia As Integer = 8
    If Lactancia And horas > 0 Then
      'horasxdia = 6
      horas += 2
    End If

    mDiAsWe_HLibre = 0
    mDiAsWe_H0 = 0
    mDiAsWe_H25 = 0
    mDiAsWe_H50 = 0
    mDiAsWe_H100 = 0
    mDiAsWe_H100b = 0

    If Dialibre And False Then 'anulada
      mDiAsWe_HLibre = horas
    Else
      If hora >= 6 And hora < 19 Then 'en el dia
        'If hora >= 6 And hora <= 9 And horas >= 9 Then
        '  horas -= 1
        'End If
        Dim aux As Integer = IIf(hora + horas > 19, 19 - hora, horas)
        aux = IIf(aux > horasxdia, horasxdia + 1, aux) 'aumentar la hora de comida
        mDiAsWe_H0 = IIf(aux >= horasxdia, horasxdia, aux) 'sea lo que sea el dia es 8 horas
        horas -= aux
        hora += aux
        If hora < 19 And horas > 0 Then
          mDiAsWe_H50 = IIf(hora + horas <= 19, horas, 19 - hora)
          horas -= mDiAsWe_H50
          hora += mDiAsWe_H50
        End If
        If hora >= 19 And horas > 0 And mDiAsWe_H0 + mDiAsWe_H50 < 8 Then
          '                      8           2          1
          mDiAsWe_H25 = IIf(mDiAsWe_H0 + mDiAsWe_H50 + horas > horasxdia, horasxdia - (mDiAsWe_H0 + mDiAsWe_H50), horas)
          horas -= mDiAsWe_H25
          hora += mDiAsWe_H25
          'hora = IIf(hora >= 24, hora - 24, hora)
        End If
        If hora < 24 And horas > 0 Then
          Dim _horas50 As Integer = IIf(hora + horas <= 24, horas, 24 - hora)
          mDiAsWe_H50 += _horas50
          horas -= _horas50
          hora += _horas50
          hora = IIf(hora >= 24, hora - 24, hora)
        End If
        'If hora >= 19 And horas > 0 Then
        '  mDiAsWe_H25 = IIf(hora + horas <= 24, horas, 24 - hora)
        '  horas -= mDiAsWe_H25
        '  hora += mDiAsWe_H25
        '  hora = IIf(hora >= 24, hora - 24, hora)
        'End If
        If horas > 0 Then
          mDiAsWe_H100 = horas
        End If
      ElseIf hora < 6 Or hora >= 19 Then 'si comenzo a trabajar en la noche
        If hora <= 24 And hora >= 19 Then 'si trabajo antes de la media noche
          mDiAsWe_H25 = IIf(hora + horas <= 24, horas, 24 - hora)
          horas -= mDiAsWe_H25
          hora += mDiAsWe_H25
          hora = IIf(hora >= 24, hora - 24, hora)
        End If
        If horas > 0 Then
          Dim ha6 As Integer = IIf(hora + horas <= 6, horas, 6 - hora)
          mDiAsWe_H25 += ha6
          horas -= ha6
          hora += ha6
        End If
        If horas > 0 Then
          If hora + horas >= 12 And mDiAsWe_H25 + horas > horasxdia Then ' si trabajo el medio dia y trabajó más de 8 horas quitar hora de almuerzo
            horas -= 1
          End If
          mDiAsWe_H0 = IIf(mDiAsWe_H25 + horas <= 8, horas, 8 - mDiAsWe_H25)
          horas -= mDiAsWe_H0
          hora += mDiAsWe_H0
        End If
        If horas > 0 Then
          mDiAsWe_H50 = horas
        End If
      End If
    End If
  End Sub

  Private Sub Calcular_HorasNOextras()
    If DiaAsi_HorasCalculadas Then
      Exit Sub
    End If
    mDiAsWe_Horas = Hora_Salida.Subtract(Hora_Entrada).TotalHours
    Dim horas As Integer = mDiAsWe_Horas
    Dim hora As Integer = Hora_Entrada.Hour

    Dim horasxdia As Integer = 8
    If Lactancia And horas > 0 Then
      'horasxdia = 6
      horas += 2
    End If

    mDiAsWe_HLibre = 0
    mDiAsWe_H0 = 0
    mDiAsWe_H25 = 0
    mDiAsWe_H50 = 0
    mDiAsWe_H100 = 0
    mDiAsWe_H100b = 0

    If Dialibre And False Then 'anulada
      mDiAsWe_HLibre = horas
    Else
      If hora >= 6 And hora < 19 Then 'en el dia
        ''If hora >= 6 And hora <= 9 And horas >= 9 Then
        ''  horas -= 1
        ''End If
        Dim aux As Integer = IIf(hora + horas > 19, 19 - hora, horas)
        aux = IIf(aux > horasxdia, horasxdia + 1, aux) 'aumentar la hora de comida
        mDiAsWe_H0 = IIf(aux >= horasxdia, horasxdia, aux) 'sea lo que sea el dia es 8 horas
        horas -= aux
        hora += aux
        If hora < 19 And horas > 0 Then
          mDiAsWe_H50 = IIf(hora + horas <= 19, horas, 19 - hora)
          horas -= mDiAsWe_H50
          hora += mDiAsWe_H50
        End If
        If hora >= 19 And horas > 0 And mDiAsWe_H0 + mDiAsWe_H50 < 8 Then
          '                      8           2          1
          mDiAsWe_H25 = IIf(mDiAsWe_H0 + mDiAsWe_H50 + horas > horasxdia, horasxdia - (mDiAsWe_H0 + mDiAsWe_H50), horas)
          horas -= mDiAsWe_H25
          hora += mDiAsWe_H25
          ''hora = IIf(hora >= 24, hora - 24, hora)
        End If
        If hora < 24 And horas > 0 Then
          Dim _horas50 As Integer = IIf(hora + horas <= 24, horas, 24 - hora)
          mDiAsWe_H50 += _horas50
          horas -= _horas50
          hora += _horas50
          hora = IIf(hora >= 24, hora - 24, hora)
        End If
        ''If hora >= 19 And horas > 0 Then
        ''  mDiAsWe_H25 = IIf(hora + horas <= 24, horas, 24 - hora)
        ''  horas -= mDiAsWe_H25
        ''  hora += mDiAsWe_H25
        ''  hora = IIf(hora >= 24, hora - 24, hora)
        ''End If
        If horas > 0 Then
          mDiAsWe_H100 = horas
        End If
      ElseIf hora < 6 Or hora >= 19 Then 'si comenzo a trabajar en la noche
        If hora <= 24 And hora >= 19 Then 'si trabajo antes de la media noche
          mDiAsWe_H25 = IIf(hora + horas <= 24, horas, 24 - hora)
          horas -= mDiAsWe_H25
          hora += mDiAsWe_H25
          hora = IIf(hora >= 24, hora - 24, hora)
        End If
        If horas > 0 Then
          Dim ha6 As Integer = IIf(hora + horas <= 6, horas, 6 - hora)
          mDiAsWe_H25 += ha6
          horas -= ha6
          hora += ha6
        End If
        If horas > 0 Then
          If hora + horas >= 12 And mDiAsWe_H25 + horas > horasxdia Then ' si trabajo el medio dia y trabajó más de 8 horas quitar hora de almuerzo
            horas -= 1
          End If
          mDiAsWe_H0 = IIf(mDiAsWe_H25 + horas <= 8, horas, 8 - mDiAsWe_H25)
          horas -= mDiAsWe_H0
          hora += mDiAsWe_H0
        End If
        If horas > 0 Then
          mDiAsWe_H50 = horas
        End If
      End If
    End If
    'mDiAsWe_H0 = 0
    mDiAsWe_H25 = 0
    mDiAsWe_H50 = 0
    mDiAsWe_H100 = 0
    mDiAsWe_H100b = 0
  End Sub

  Public ReadOnly Property DiAsWe_H0() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_Horas()
      End If
      Return mDiAsWe_H0
    End Get
  End Property

  Public ReadOnly Property DiAsWe_H25() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_Horas()
      End If
      Return mDiAsWe_H25
    End Get
  End Property

  Public ReadOnly Property DiAsWe_H50() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_Horas()
      End If
      Return mDiAsWe_H50
    End Get
  End Property

  Public ReadOnly Property DiAsWe_H100() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_Horas()
      End If
      Return mDiAsWe_H100
    End Get
  End Property

  Public ReadOnly Property DiAsWe_HLibre() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_Horas()
      End If
      Return mDiAsWe_HLibre
    End Get
  End Property

  'pedro
  Public ReadOnly Property DiAsWe_Horas() As Integer
    Get
      If mDiAsWe_Horas = 0 Then
        Calcular_HorasNOextras()
      End If
      Return mDiAsWe_Horas
    End Get
  End Property


  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    Patron_Codigo = CType(Fila("Patron_Codigo"), Integer)
    DiaAsi_Fecha = CType(Fila("DiaAsi_Fecha"), Date)
    Hora_Entrada = CType(Fila("Hora_Entrada"), Date)
    Hora_Salida = CType(Fila("Hora_Salida"), Date)
    Asistencia = CType(Fila("Asistencia"), Boolean)
    Dialibre = CType(Fila("Dialibre"), Boolean)
    Feriado = CType(Fila("Feriado"), Boolean)
    Permiso = CType(Fila("Permiso"), Boolean)
    Vacacion = CType(Fila("Vacacion"), Boolean)
    Enfermedad = CType(Fila("Enfermedad"), Boolean)
    Lactancia = CType(Fila("Lactancia"), Boolean)
    Embarazo = CType(Fila("Embarazo"), Boolean)
    Sala = CType(Fila("Sala"), Integer)

    DiaAsi_HorasCalculadas = CBool(Fila("DiaAsi_HorasCalculadas"))

    If DiaAsi_HorasCalculadas Then
      mDiAsWe_H0 = CInt(Fila("DiaAsi_Jornadaaux"))
      mDiAsWe_H25 = CInt(Fila("DiaAsi_Sobret25aux"))
      mDiAsWe_H50 = CInt(Fila("DiaAsi_Sobret50aux"))
      mDiAsWe_H100 = CInt(Fila("DiaAsi_Sobret100aux"))
      mDiAsWe_H100b = CInt(Fila("DiaAsi_Sobret100baux"))
    Else
      mDiAsWe_H0 = 0
      mDiAsWe_H25 = 0
      mDiAsWe_H50 = 0
      mDiAsWe_H100 = 0
      mDiAsWe_H100b = 0
    End If
    mDiAsWe_Horas = 0
    mDiAsWe_HLibre = 0

    mPatrono = Nothing
    mEmpleado = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.AgregarParametro("@Hora_Entrada", Hora_Entrada)
    OperadorDatos.AgregarParametro("@Hora_Salida", Hora_Salida)
    OperadorDatos.AgregarParametro("@Asistencia", Asistencia)
    OperadorDatos.AgregarParametro("@Dialibre", Dialibre)
    OperadorDatos.AgregarParametro("@Feriado", Feriado)
    OperadorDatos.AgregarParametro("@Permiso", Permiso)
    OperadorDatos.AgregarParametro("@Vacacion", Vacacion)
    OperadorDatos.AgregarParametro("@Enfermedad", Enfermedad)
    OperadorDatos.AgregarParametro("@Lactancia", Lactancia)
    OperadorDatos.AgregarParametro("@Embarazo", Embarazo)
    OperadorDatos.AgregarParametro("@Sala", Sala)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If OperadorDatos.EstaenTransaccion Then
      Else
        Me.AceptarCambios()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "DiaAsistenciaWebList"
Public Class DiaAsistenciaWebList
  Inherits System.ComponentModel.BindingList(Of DiaAsistenciaWeb)

End Class
#End Region
