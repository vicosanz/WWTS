'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas


#Region "LotePago"
Public Class LotePago

  Const _Procedimiento As String = "proc_LotePagoVario"

  Private mPatrono As Patrono = Nothing
  Public Property Patrono As Patrono
    Get
      If Me.mPatrono Is Nothing AndAlso Patron_Codigo > 0 Then
        Me.mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return mPatrono
    End Get
    Set(value As Patrono)
      mPatrono = value
      Patron_Codigo = value.Patron_Codigo
    End Set
  End Property

  Public Sub New(ByVal _Patrono As Patrono, ByVal _EsNuevo As Boolean)
    MyBase.New()
    operadorDatos = _patrono.operadorDatos
    Patrono = _Patrono
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _Patrono As Patrono, ByVal _LotPag_FechaGeneracion As DateTime)
    Me.New(_Patrono, True)
    LotPag_FechaGeneracion = _LotPag_FechaGeneracion
  End Sub

  Public Sub New(ByVal _Patrono As Patrono, ByVal _LotPag_Secuencia As Integer)
    Me.New(_Patrono, False)
    LotPag_Secuencia = _LotPag_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto LotePago")
    End If
  End Sub

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Patron_Codigo = CInt(Fila("Patron_Codigo"))
    LotPag_Secuencia = CInt(Fila("LotPag_Secuencia"))
    LotPag_FechaGeneracion = CDate(Fila("LotPag_FechaGeneracion"))
    LotPag_Cerrado = CBool(Fila("LotPag_Cerrado"))
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@LotPag_Secuencia", LotPag_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@LotPag_Secuencia", LotPag_Secuencia)
    OperadorDatos.AgregarParametro("@LotPag_FechaGeneracion", LotPag_FechaGeneracion)
    OperadorDatos.AgregarParametro("@LotPag_Cerrado", LotPag_Cerrado)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        LotPag_Secuencia = Result
      End If
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@LotPag_Secuencia", LotPag_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "LotePagoList"
Public Class LotePagoList
  Inherits System.ComponentModel.BindingList(Of LotePago)

  Enum enumReporteLotePago As Byte
    Todos = 0
    Cerrados = 1
    NoCerrados = 2
  End Enum

  Public Shared Function ObtenerLista(ByVal _Patrono As Patrono, ByVal _tiporeporte As enumReporteLotePago) As LotePagoList
    Dim oResult As New LotePagoList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _Patrono.OperadorDatos
      .AgregarParametro("@accion", "F")
      .AgregarParametro("@Patron_Codigo", _Patrono.Patron_Codigo)
      Select Case _tiporeporte
        Case enumReporteLotePago.Cerrados
          .AgregarParametro("@LotPag_Cerrado", 1)
        Case enumReporteLotePago.NoCerrados
          .AgregarParametro("@LotPag_Cerrado", 0)
      End Select

      .Procedimiento = "proc_LotePagoVario"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New LotePago(_Patrono, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
