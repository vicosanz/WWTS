'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas


#Region "RegistroIESS"
Public Class RegistroIESS

  Const _Procedimiento As String = "proc_RegistroIESS"

  Private mPatrono As Patrono = Nothing

  Private mTipocontrato As TipoContrato = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Patrono As Patrono, ByVal _TipoContrato As TipoContrato, ByVal _anio As Integer, ByVal _mes As Integer, ByVal _Nuevo As Boolean)
    Me.New(_OperadorDatos, _Nuevo)

    Patrono = _Patrono
    Tipocontrato = _TipoContrato
    RegIES_Anio = _anio
    RegIES_Mes = _mes

    If Not _Nuevo Then
      EsNuevo = Not Me.Recargar
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Patron_Codigo As Integer, ByVal _TipCon_Codigo As Integer, ByVal _RegIES_Anio As Integer, ByVal _RegIES_Mes As Integer)
    Me.New(_OperadorDatos, False)
    Patron_Codigo = _Patron_Codigo
    TipCon_Codigo = _TipCon_Codigo
    RegIES_Anio = _RegIES_Anio
    RegIES_Mes = _RegIES_Mes
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto RegistroIESS")
    End If
  End Sub

  'Patrono
  Public Overridable Property Patrono() As Patrono
    Get
      If Me.mPatrono Is Nothing AndAlso Patron_Codigo > 0 Then
        Me.mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return Me.mPatrono
    End Get
    Set(ByVal value As Patrono)
      Me.mPatrono = value
      Patron_Codigo = value.Patron_Codigo
    End Set
  End Property

  'Tipocontrato
  Public Overridable Property Tipocontrato() As TipoContrato
    Get
      If Me.mTipocontrato Is Nothing AndAlso TipCon_Codigo > 0 Then
        Me.mTipocontrato = New TipoContrato(OperadorDatos, Patrono.Patron_Codigo, TipCon_Codigo)
      End If
      Return Me.mTipocontrato
    End Get
    Set(ByVal value As TipoContrato)
      Me.mTipocontrato = value
      TipCon_Codigo = value.TipCon_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Patron_Codigo = CType(Fila("Patron_Codigo"), Integer)
    TipCon_Codigo = CType(Fila("TipCon_Codigo"), Integer)
    RegIES_Anio = CType(Fila("RegIES_Anio"), Integer)
    RegIES_Mes = CType(Fila("RegIES_Mes"), Integer)
    RegIES_NumeroCompte = CType(Fila("RegIES_NumeroCompte"), String)
    RegIES_FechaPago = CType(Fila("RegIES_FechaPago"), Date)
    mPatrono = Nothing
    mTipocontrato = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.AgregarParametro("@RegIES_Anio", RegIES_Anio)
    OperadorDatos.AgregarParametro("@RegIES_Mes", RegIES_Mes)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.AgregarParametro("@RegIES_Anio", RegIES_Anio)
    OperadorDatos.AgregarParametro("@RegIES_Mes", RegIES_Mes)
    OperadorDatos.AgregarParametro("@RegIES_NumeroCompte", RegIES_NumeroCompte)
    OperadorDatos.AgregarParametro("@RegIES_FechaPago", RegIES_FechaPago)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@TipCon_Codigo", TipCon_Codigo)
    OperadorDatos.AgregarParametro("@RegIES_Anio", RegIES_Anio)
    OperadorDatos.AgregarParametro("@RegIES_Mes", RegIES_Mes)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "RegistroIESSList"
Public Class RegistroIESSList
  Inherits System.ComponentModel.BindingList(Of RegistroIESS)
  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _filtro As String = "") As RegistroIESSList
    Dim oResult As RegistroIESSList = New RegistroIESSList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_RegistroIESS"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New RegistroIESS(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, ByVal _Patrono As Patrono, ByVal _TipoContrato As TipoContrato) As RegistroIESSList
    Dim oResult As New RegistroIESSList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _OperadorDatos
      .AgregarParametro("@accion", "G")
      .AgregarParametro("@Patron_Codigo", _Patrono.Patron_Codigo)
      '.AgregarParametro("@hac_codigo", _Patrono.Hac_codigo)
      .AgregarParametro("@TipCon_Codigo", _TipoContrato.TipCon_Codigo)
      .Procedimiento = "proc_RegistroIESS"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New RegistroIESS(_OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
