'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "DetalleModeloLabor"
Public Class DetalleModeloLabor

  Const _Procedimiento As String = "proc_DetalleModeloLabor"

  Private mPardetModeloLabor As WWTSParametroDet = Nothing

  Private mPardetEstadoDia As WWTSParametroDet = Nothing

  Private mTarea As Tarea = Nothing

#Region "Constructores de la clase"
  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _nuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _nuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _pardetModeloLabor As WWTSParametroDet)
    Me.New(_OperadorDatos, True)
    Me.PardetModeloLabor = _pardetModeloLabor
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _DeMoLa_diasemana As System.DayOfWeek, ByVal _ModeloLabor As WWTSParametroDet)
    Me.New(_OperadorDatos, _ModeloLabor)
    Me.DeMoLa_DiaSemana = _DeMoLa_diasemana
    EsNuevo = False
    If Not Me.Recargar Then
      'Throw New Exception("El objeto no puede ser cargado")
      EsNuevo = True
    End If
  End Sub
#End Region

  Public Shadows Property DeMoLa_diasemanaEnum() As System.DayOfWeek
    Get
      Return CType(DeMoLa_DiaSemana, System.DayOfWeek)
    End Get
    Set(ByVal value As System.DayOfWeek)
      DeMoLa_DiaSemana = CInt(value)
    End Set
  End Property

  'Modelolabor
  Public Overridable Property PardetModeloLabor() As WWTSParametroDet
    Get
      If Me.mPardetModeloLabor Is Nothing AndAlso Pardet_ModeloLabor > 0 Then
        Me.mPardetModeloLabor = New WWTSParametroDet(OperadorDatos, Parame_ModeloLabor, Pardet_ModeloLabor)
      End If
      Return Me.mPardetModeloLabor
    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetModeloLabor = value
      Parame_ModeloLabor = value.Parame_Codigo
      Pardet_ModeloLabor = value.Pardet_Secuencia
    End Set
  End Property

  Public Property PardetEstadoDia() As WWTSParametroDet
    Get
      If mPardetEstadoDia Is Nothing AndAlso Pardet_EstadoDia <> 0 Then
        mPardetEstadoDia = New WWTSParametroDet(OperadorDatos, Parame_EstadoDia, Pardet_EstadoDia)
      End If
      Return mPardetEstadoDia
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetEstadoDia = value
      Parame_EstadoDia = value.Parame_Codigo
      Pardet_EstadoDia = value.Pardet_Secuencia
    End Set
  End Property

  Public Overridable Property Pardet_EstadoDiaEnum() As Enumerados.enumEstadoModeloLabor
    Get
      Return CType(Pardet_EstadoDia, Enumerados.enumTipoBeneficio)
    End Get
    Set(ByVal value As Enumerados.enumEstadoModeloLabor)
      Pardet_EstadoDia = CInt(value)
    End Set
  End Property

  Public Property Tarea() As Tarea
    Get
      If mTarea Is Nothing AndAlso Tarea_Codigo <> 0 Then
        mTarea = New Tarea(OperadorDatos, Tarea_Codigo)
      End If
      Return mTarea
    End Get
    Set(ByVal value As Tarea)
      mTarea = value
      Tarea_Codigo = value.Tarea_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_ModeloLabor = CType(Fila("Parame_ModeloLabor"), Integer)
    Pardet_ModeloLabor = CType(Fila("Pardet_ModeloLabor"), Integer)
    DeMoLa_DiaSemana = CType(Fila("DeMoLa_DiaSemana"), Integer)
    Tarea_Codigo = CType(Fila("Tarea_Codigo"), Integer)
    Parame_EstadoDia = CType(Fila("Parame_EstadoDia"), Integer)
    Pardet_EstadoDia = CType(Fila("Pardet_EstadoDia"), Integer)
    DeMoLa_Asistencia = CType(Fila("DeMoLa_Asistencia"), Boolean)
    DeMoLa_Tarea = CType(Fila("DeMoLa_Tarea"), Integer)
    DeMoLa_Sobre50 = CType(Fila("DeMoLa_Sobre50"), Integer)
    DeMoLa_Sobre100 = CType(Fila("DeMoLa_Sobre100"), Integer)
    DeMoLa_Sobre25 = CType(Fila("DeMoLa_Sobre25"), Integer)
    mPardetModeloLabor = Nothing
    mTarea = Nothing
    mPardetEstadoDia = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_ModeloLabor", Parame_ModeloLabor)
    OperadorDatos.AgregarParametro("@Pardet_ModeloLabor", Pardet_ModeloLabor)
    OperadorDatos.AgregarParametro("@DeMoLa_DiaSemana", DeMoLa_DiaSemana)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_ModeloLabor", Parame_ModeloLabor)
    OperadorDatos.AgregarParametro("@Pardet_ModeloLabor", Pardet_ModeloLabor)
    OperadorDatos.AgregarParametro("@DeMoLa_DiaSemana", DeMoLa_DiaSemana)
    OperadorDatos.AgregarParametro("@Tarea_Codigo", Tarea_Codigo)
    OperadorDatos.AgregarParametro("@Parame_EstadoDia", Parame_EstadoDia)
    OperadorDatos.AgregarParametro("@Pardet_EstadoDia", Pardet_EstadoDia)
    OperadorDatos.AgregarParametro("@DeMoLa_Asistencia", DeMoLa_Asistencia)
    OperadorDatos.AgregarParametro("@DeMoLa_Tarea", DeMoLa_Tarea)
    OperadorDatos.AgregarParametro("@DeMoLa_Sobre50", DeMoLa_Sobre50)
    OperadorDatos.AgregarParametro("@DeMoLa_Sobre100", DeMoLa_Sobre100)
    OperadorDatos.AgregarParametro("@DeMoLa_Sobre25", DeMoLa_Sobre25)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_ModeloLabor", Parame_ModeloLabor)
    OperadorDatos.AgregarParametro("@Pardet_ModeloLabor", Pardet_ModeloLabor)
    OperadorDatos.AgregarParametro("@DeMoLa_DiaSemana", DeMoLa_DiaSemana)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "DetalleModeloLaborList"
Public Class DetalleModeloLaborList
    Inherits System.ComponentModel.BindingList(Of DetalleModeloLabor)
    Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _filtro As String = "") As DetalleModeloLaborList
        Dim oResult As DetalleModeloLaborList = New DetalleModeloLaborList
        Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
        With _OperadorDatos
            .AgregarParametro("@Accion", "F")
            .AgregarParametro("@filtro", _filtro)
            .Procedimiento = "proc_DetalleModeloLabor"
            bReturn = .Ejecutar(ds)
            .LimpiarParametros()
        End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New DetalleModeloLabor(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
        Return oResult
    End Function

    Public Sub New()
    End Sub
End Class
#End Region
