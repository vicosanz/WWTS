'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "Conciliacion"
Public Class Conciliacion

  Const _Procedimiento As String = "proc_Conciliacion"

  Private mPardetCuentaBancaria As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Concil_Secuencia As Integer)
    If _OperadorDatos Is Nothing Then
      Throw New InvalidOperationException("El operador de datos es nulo")
    End If

    OperadorDatos = _OperadorDatos

    Concil_Secuencia = _Concil_Secuencia
    EsNuevo = False
    If Not Me.Recargar Then
      EsNuevo = True
    End If
  End Sub

  Public Overridable Property PardetCuentaBancaria() As WWTSParametroDet
    Get
      If Me.mPardetCuentaBancaria Is Nothing AndAlso Pardet_CuentaBancaria > 0 Then
        Me.mPardetCuentaBancaria = New WWTSParametroDet(OperadorDatos, Parame_CuentaBancaria, Pardet_CuentaBancaria)
      End If
      Return Me.mPardetCuentaBancaria

    End Get
    Set(ByVal value As WWTSParametroDet)
      Me.mPardetCuentaBancaria = value
      Pardet_CuentaBancaria = value.Pardet_Secuencia
      Parame_CuentaBancaria = value.Parame_Codigo
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Concil_Secuencia = CType(Fila("Concil_Secuencia"), Integer)
    Parame_CuentaBancaria = CType(Fila("Parame_CuentaBancaria"), Integer)
    Pardet_CuentaBancaria = CType(Fila("Pardet_CuentaBancaria"), Integer)
    Concil_Lote = CType(Fila("Concil_Lote"), String)
    Concil_Fecha = CType(Fila("Concil_Fecha"), Date)
    Concil_Codigo = CType(Fila("Concil_Codigo"), Integer)
    Concil_Concepto = CType(Fila("Concil_Concepto"), String)
    Concil_Tipo = CType(Fila("Concil_Tipo"), String)
    Concil_Documento = CType(Fila("Concil_Documento"), Integer)
    Concil_Oficina = CType(Fila("Concil_Oficina"), String)
    Concil_Monto = CType(Fila("Concil_Monto"), Decimal)
    Concil_Saldo = CType(Fila("Concil_Saldo"), Decimal)

    mPardetCuentaBancaria = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Concil_Secuencia", Concil_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If

    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Concil_Secuencia", Concil_Secuencia)
    OperadorDatos.AgregarParametro("@Parame_CuentaBancaria", Parame_CuentaBancaria)
    OperadorDatos.AgregarParametro("@Pardet_CuentaBancaria", Pardet_CuentaBancaria)
    OperadorDatos.AgregarParametro("@Concil_Lote", Concil_Lote)
    OperadorDatos.AgregarParametro("@Concil_Fecha", Concil_Fecha)
    OperadorDatos.AgregarParametro("@Concil_Codigo", Concil_Codigo)
    OperadorDatos.AgregarParametro("@Concil_Concepto", Concil_Concepto)
    OperadorDatos.AgregarParametro("@Concil_Tipo", Concil_Tipo)
    OperadorDatos.AgregarParametro("@Concil_Documento", Concil_Documento)
    OperadorDatos.AgregarParametro("@Concil_Oficina", Concil_Oficina)
    OperadorDatos.AgregarParametro("@Concil_Monto", Concil_Monto)
    OperadorDatos.AgregarParametro("@Concil_Saldo", Concil_Saldo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      AceptarCambios()
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Concil_Secuencia", Concil_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "ConciliacionList"
Public Class ConciliacionList
  Inherits System.ComponentModel.BindingList(Of Conciliacion)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, _PardetCuentaBancaria As WWTSParametroDet, Optional ByVal _filtro As String = "") As ConciliacionList
    Dim oResult As ConciliacionList = New ConciliacionList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Parame_CuentaBancaria", _PardetCuentaBancaria.Parame_Codigo)
      .AgregarParametro("@Pardet_CuentaBancaria", _PardetCuentaBancaria.Pardet_Secuencia)
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Conciliacion"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Conciliacion(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function Eliminar(ByVal _OperadorDatos As OperadorDatos, _Concil_Lote As String, _PardetCuentaBancaria As WWTSParametroDet) As Boolean
    Dim bReturn As Boolean
    With _OperadorDatos
      .AgregarParametro("@Accion", "EL")
      .AgregarParametro("@Parame_CuentaBancaria", _PardetCuentaBancaria.Parame_Codigo)
      .AgregarParametro("@Pardet_CuentaBancaria", _PardetCuentaBancaria.Pardet_Secuencia)
      .AgregarParametro("@Concil_Lote", _Concil_Lote)
      .Procedimiento = "proc_Conciliacion"
      bReturn = .Ejecutar
      .LimpiarParametros()
    End With
    Return bReturn
  End Function

End Class
#End Region
