'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "DiaAsistencia"
Public Class DiaAsistencia

  Const _Procedimiento As String = "proc_DiaAsistencia"

  Private mAsistencia As Asistencia = Nothing

  Private mPardetDepartamento As WWTSParametroDet = Nothing

  Private mPardetArea As WWTSParametroDet = Nothing

  Private mPardetLote As WWTSParametroDet = Nothing

  Private mCargo As Cargo = Nothing

  Private mTarea As Tarea = Nothing

  Private mPardetEstadoDia As WWTSParametroDet = Nothing

  Private mSucursal As Sucursal = Nothing

  Private mPatrono As Patrono = Nothing

  Private mConfigRoles As ConfigRoles = Nothing

#Region "Constructores"
  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Asistencia As Asistencia, ByVal _DiaAsi_Fecha As Date)
    Me.New(_OperadorDatos, False)
    Me.Asistencia = _Asistencia
    Me.DiaAsi_Fecha = _DiaAsi_Fecha

    If Not Me.Recargar Then
      EsNuevo = True

      If Asistencia.Contrato IsNot Nothing Then
        Sucursal = Asistencia.Contrato.Sucursal
      End If

      'Dim _lab As Labor
      Dim _cargo As Cargo
      'If mAsistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Destajo Then
      '_lab = mAsistencia.Tipocontrato.Labor
      'Else
      '_lab = mAsistencia.Contrato.Labor
      _cargo = mAsistencia.Contrato.Cargo
      Cargo = _cargo
      'End If
      'Labor = _lab
      PardetLote = mAsistencia.Contrato.PardetLote

      Dim dml As DetalleModeloLabor = New DetalleModeloLabor(OperadorDatos, DiaAsi_Fecha.DayOfWeek, _cargo.PardetModeloLabor)
      If dml.EsNuevo Then
        Throw New Exception("Hubo un error al tratar de recuperar la Modelo de Labor " & dml.PardetModeloLabor.Pardet_Descripcion & " de la labor " & _cargo.Cargo_Descripcion)
      Else
        Tarea = dml.Tarea
        'DiaAsi_jornada = dml.Dml_tarea
        'DiaAsi_sobret = dml.Dml_sobre
      End If
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Entida_Codigo As Integer, ByVal _Patron_Codigo As Integer, ByVal _PerPag_FechaDesde As Date, ByVal _Parame_PeriodoPago As Integer, ByVal _Pardet_PeriodoPago As Integer, ByVal _DiaAsi_Fecha As Date)
    Me.New(_OperadorDatos, False)
    Entida_Codigo = _Entida_Codigo
    Patron_Codigo = _Patron_Codigo
    PerPag_FechaDesde = _PerPag_FechaDesde
    Parame_PeriodoPago = _Parame_PeriodoPago
    Pardet_PeriodoPago = _Pardet_PeriodoPago
    DiaAsi_Fecha = _DiaAsi_Fecha
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto DiaAsistencia")
    End If
  End Sub
#End Region

#Region "DiaAsistencia"
  Private mDiaAsistenciaWeb As DiaAsistenciaWeb = Nothing
  Public ReadOnly Property DiaAsistenciaWeb() As DiaAsistenciaWeb
    Get
      If mDiaAsistenciaWeb Is Nothing Then
        Try
          mDiaAsistenciaWeb = New DiaAsistenciaWeb(OperadorDatos, Me.Entida_Codigo, Me.Patron_Codigo, Me.DiaAsi_Fecha)
        Catch ex As Exception
          'mDiaAsistenciaWeb = Nothing
          mDiaAsistenciaWeb = New DiaAsistenciaWeb(OperadorDatos, True)
        End Try
      End If
      Return mDiaAsistenciaWeb
    End Get
  End Property

  Public ReadOnly Property WebHorainicio() As String
    Get
      If DiaAsistenciaWeb Is Nothing OrElse Not Asistencia.Contrato.Cargo.Cargo_ControlarHorasExtras Then
        Return String.Empty
      Else
        Return DiaAsistenciaWeb.Hora_Entrada.ToString("HH:mm:ss tt")
      End If
    End Get
  End Property

  Public ReadOnly Property WebHoraFin() As String
    Get
      If DiaAsistenciaWeb Is Nothing OrElse Not Asistencia.Contrato.Cargo.Cargo_ControlarHorasExtras Then
        Return String.Empty
      Else
        Return DiaAsistenciaWeb.Hora_Salida.ToString("HH:mm:ss tt")
      End If
    End Get
  End Property

  Public ReadOnly Property WebAsistencia() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Asistencia
      End If
    End Get
  End Property

  Public ReadOnly Property WebDialibre() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Dialibre
      End If
    End Get
  End Property

  Public ReadOnly Property WebFeriado() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Feriado
      End If
    End Get
  End Property

  Public ReadOnly Property WebPermiso() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Permiso
      End If
    End Get
  End Property

  Public ReadOnly Property WebVacacion() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Vacacion
      End If
    End Get
  End Property

  Public ReadOnly Property WebEnfermedad() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Enfermedad
      End If
    End Get
  End Property

  Public ReadOnly Property WebLactancia() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Lactancia
      End If
    End Get
  End Property

  Public ReadOnly Property WebEmbarazo() As Boolean
    Get
      If DiaAsistenciaWeb Is Nothing Then
        Return False
      Else
        Return DiaAsistenciaWeb.Embarazo
      End If
    End Get
  End Property

  Public ReadOnly Property Area As String
    Get
      If mPardetArea Is Nothing AndAlso mPardet_Area > 0 Then
        mPardetArea = New WWTSParametroDet(OperadorDatos, Parame_Area, Pardet_Area)
      End If
      If mPardetArea Is Nothing Then
        Return String.Empty
      Else
        Return mPardetArea.Pardet_Descripcion
      End If
    End Get
  End Property

  Public ReadOnly Property Lote As String
    Get
      If mPardetLote Is Nothing AndAlso mPardet_Lote > 0 Then
        mPardetLote = New WWTSParametroDet(OperadorDatos, Parame_Lote, Pardet_Lote)
      End If
      If mPardetLote Is Nothing Then
        Return String.Empty
      Else
        Return String.Format("{0} / {1} / {2}", mPardetLote.PardetPadre.PardetPadre.Pardet_DatoStr1, mPardetLote.PardetPadre.Pardet_DatoStr1, mPardetLote.Pardet_Descripcion)
      End If
    End Get
  End Property
#End Region

  Public ReadOnly Property NoesNuevo As Boolean
    Get
      Return Not EsNuevo
    End Get
  End Property

  Private mPuedeModificar As Boolean = True
  Public Property PuedeModificar As Boolean
    Get
      Return mPuedeModificar
    End Get
    Set(value As Boolean)
      mPuedeModificar = value
    End Set
  End Property

  Private mSemana As Integer = 0
  Public Property Semana() As Integer
    Get
      Return mSemana
    End Get
    Set(ByVal value As Integer)
      mSemana = value
    End Set
  End Property

  'Asistencia
  Public Overridable Property Asistencia() As Asistencia
    Get
      If mAsistencia Is Nothing And Patron_Codigo <> 0 And Entida_Codigo <> 0 Then
        mAsistencia = New Asistencia(OperadorDatos, New Empleado(Me.OperadorDatos, Me.Entida_Codigo), New Patrono(Me.OperadorDatos, Patron_Codigo), New PeriodoPago(OperadorDatos, Me.PerPag_FechaDesde, Me.Parame_PeriodoPago, Me.Pardet_PeriodoPago))
      End If
      Return Me.mAsistencia
    End Get
    Set(ByVal value As Asistencia)
      Me.mAsistencia = value
      Entida_Codigo = value.Entida_Codigo
      Patron_Codigo = value.Patron_Codigo
      PerPag_FechaDesde = value.PerPag_FechaDesde
      Parame_PeriodoPago = value.Parame_PeriodoPago
      Pardet_PeriodoPago = value.Pardet_PeriodoPago
    End Set
  End Property

  'Cargo
  Public Overridable Property Cargo() As Cargo
    Get
      If mCargo Is Nothing AndAlso Cargo_Secuencia > 0 Then
        mCargo = New Cargo(OperadorDatos, Parame_Departamento, Pardet_Departamento, Parame_Area, Pardet_Area, Cargo_Secuencia)
      End If
      Return mCargo
    End Get
    Set(ByVal value As Cargo)
      mCargo = value
      If value Is Nothing Then
        Parame_Departamento = 0
        Pardet_Departamento = 0
        Parame_Area = 0
        Pardet_Area = 0
        Cargo_Secuencia = 0
      Else
        Parame_Departamento = mCargo.Parame_Departamento
        Pardet_Departamento = mCargo.Pardet_Departamento
        Parame_Area = mCargo.Parame_Area
        Pardet_Area = mCargo.Pardet_Area
        Cargo_Secuencia = mCargo.Cargo_Secuencia
      End If
    End Set
  End Property

  Public Overridable Property Patrono() As Patrono
    Get
      If mPatrono Is Nothing And Patron_Codigo <> 0 Then
        mPatrono = New Patrono(OperadorDatos, Patron_Codigo)
      End If
      Return mPatrono
    End Get
    Set(ByVal value As Patrono)
      Patron_Codigo = value.Patron_Codigo
      mPatrono = value
    End Set
  End Property

  Public ReadOnly Property ConfigRoles() As ConfigRoles
    Get
      If mConfigRoles Is Nothing AndAlso Patrono IsNot Nothing Then
        mConfigRoles = New ConfigRoles(OperadorDatos, Patrono.Pais, False)
      End If
      Return mConfigRoles
    End Get
  End Property

  Public Property CodigoLargo() As Integer
    Get
      Return Pardet_Departamento * 1000 + Me.Cargo_Secuencia
    End Get
    Set(ByVal value As Integer)
      Pardet_Departamento = Math.Floor(value / 1000)
      Cargo_Secuencia = value - Math.Floor(value / 1000) * 1000
    End Set
  End Property

  'Sucursal
  Public Overridable Property Sucursal() As Sucursal
    Get
      If Me.mSucursal Is Nothing AndAlso Sucurs_Codigo > 0 Then
        Me.mSucursal = New Sucursal(New Empresa(OperadorDatos, Empres_Codigo), Sucurs_Codigo)
      End If
      Return Me.mSucursal
    End Get
    Set(ByVal value As Sucursal)
      Me.mSucursal = value
      Empres_Codigo = value.Empres_Codigo
      Sucurs_Codigo = value.Sucurs_Codigo
    End Set
  End Property

  'Tarea
  Public Overridable Property Tarea() As Tarea
    Get
      If Me.mTarea Is Nothing AndAlso Tarea_Codigo > 0 Then
        Me.mTarea = New Tarea(OperadorDatos, Tarea_Codigo)
        'Me.mTarea = New Tarea()
      End If
      Return Me.mTarea
    End Get
    Set(ByVal value As Tarea)
      Me.mTarea = value
      Tarea_Codigo = value.Tarea_Codigo
    End Set
  End Property

  Public Property PardetEstadoDia() As WWTSParametroDet
    Get
      If mPardetEstadoDia Is Nothing AndAlso Pardet_EstadoDia <> 0 Then
        mPardetEstadoDia = New WWTSParametroDet(OperadorDatos, Parame_EstadoDia, Pardet_EstadoDia)
      End If
      Return mPardetEstadoDia
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetEstadoDia = value
      Parame_EstadoDia = value.Parame_Codigo
      Pardet_EstadoDia = value.Pardet_Secuencia
    End Set
  End Property

  Public Property PardetDepartamento() As WWTSParametroDet
    Get
      If mPardetDepartamento Is Nothing AndAlso Pardet_Departamento <> 0 Then
        mPardetDepartamento = New WWTSParametroDet(OperadorDatos, Parame_Departamento, Pardet_Departamento)
      End If
      Return mPardetDepartamento
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetDepartamento = value
      If value Is Nothing Then
        Parame_Departamento = 0
        Pardet_Departamento = 0
      Else
        Parame_Departamento = value.Parame_Codigo
        Pardet_Departamento = value.Pardet_Secuencia
      End If
    End Set
  End Property

  Public Property PardetArea() As WWTSParametroDet
    Get
      If mPardetArea Is Nothing AndAlso Pardet_Area <> 0 Then
        mPardetArea = New WWTSParametroDet(OperadorDatos, Parame_Area, Pardet_Area)
      End If
      Return mPardetArea
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetArea = value
      If value Is Nothing Then
        Parame_Area = 0
        Pardet_Area = 0
      Else
        Parame_Area = value.Parame_Codigo
        Pardet_Area = value.Pardet_Secuencia
      End If
    End Set
  End Property

  Public Property PardetLote() As WWTSParametroDet
    Get
      If mPardetLote Is Nothing AndAlso Pardet_Lote <> 0 Then
        mPardetLote = New WWTSParametroDet(OperadorDatos, Parame_Lote, Pardet_Lote)
      End If
      Return mPardetLote
    End Get
    Set(ByVal value As WWTSParametroDet)
      mPardetLote = value
      If value Is Nothing Then
        Parame_Lote = 0
        Pardet_Lote = 0
      Else
        Parame_Lote = value.Parame_Codigo
        Pardet_Lote = value.Pardet_Secuencia
      End If
    End Set
  End Property

  Public Overridable Property Pardet_EstadoDiaEnum() As Enumerados.enumEstadoModeloLabor
    Get
      Return CType(Pardet_EstadoDia, Enumerados.enumTipoBeneficio)
    End Get
    Set(ByVal value As Enumerados.enumEstadoModeloLabor)
      Pardet_EstadoDia = CInt(value)
      If value = Enumerados.enumEstadoModeloLabor.Enfermedad_Maternidad Then
        DiaAsi_Asistencia = IIf(DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday, False, True)

        DiaAsi_Jornada = IIf(DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday, 0, Tarea.Tarea_Meta)
        DiaAsi_Sobret50 = 0
        DiaAsi_Sobret100 = 0
        DiaAsi_Sobret100b = 0
      End If
      If value = Enumerados.enumEstadoModeloLabor.Maternidad Then
        DiaAsi_Asistencia = IIf(DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday, False, True)

        DiaAsi_Jornada = IIf(DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday, 0, Tarea.Tarea_Meta)
        DiaAsi_Sobret50 = 0
        DiaAsi_Sobret100 = 0
        DiaAsi_Sobret100b = 0
      End If
    End Set
  End Property

  Public ReadOnly Property FechaString() As String
    Get
      Return String.Format("{0}, {1} de {2}", Enumerados.DiaSemanaList.RetornarDescripcion(CInt(DiaAsi_Fecha.DayOfWeek)).Substring(0, 2), DiaAsi_Fecha.Day, Utilerias.listameses(DiaAsi_Fecha.Month))
    End Get
  End Property

#Region "Totales"
  'Public ReadOnly Property TotalDiario() As Decimal
  '  Get
  '    Return DiaAsi_ValorH0 + DiaAsi_ValorIntegral + DiaAsi_Valoradicional + DiaAsi_ValorHLibre + DiaAsi_ValorH25 + DiaAsi_ValorH50 + DiaAsi_ValorH100 - DiaAsi_valorsubmatenf
  '  End Get
  'End Property
#End Region

#Region "Overrides"
  Public Shadows Property DiaAsi_integrales() As Decimal
    Get
      If Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Vacaciones Then
        Return 0
      Else
        Return mDiaAsi_Integrales
      End If
    End Get
    Set(ByVal value As Decimal)
      mDiaAsi_Integrales = value
    End Set
  End Property

  'Public ReadOnly Property DiaAsi_ValorIntegral() As Decimal
  '  Get
  '    Return Asistencia.Asiste_SueldoBase / 30 * DiaAsi_integrales
  '  End Get
  'End Property

  Public ReadOnly Property DiaAsi_diario() As Decimal
    Get
      Dim _dia As Decimal = 0
      If Asistencia.Asiste_TurnosRotativos Then
        Select Case Pardet_EstadoDiaEnum
          Case Enumerados.enumEstadoModeloLabor.DiaLibre
          Case Else
            _dia = IIf(DiaAsi_Jornada + DiaAsi_Sobret25 + DiaAsi_Sobret50 + DiaAsi_Sobret100 + DiaAsi_Sobret100b > 0, 1, 0)
        End Select
      Else
        If Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday) Then
          Select Case Pardet_EstadoDiaEnum
            Case Enumerados.enumEstadoModeloLabor.DiaLibre
              _dia = 0
            Case Enumerados.enumEstadoModeloLabor.Feriado
              If (Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.PorHoras Or Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Destajo) And Not DiaAsi_Asistencia Then
                _dia = 0
              Else
                _dia = 1
              End If
            Case Enumerados.enumEstadoModeloLabor.Normal, Enumerados.enumEstadoModeloLabor.Permiso, Enumerados.enumEstadoModeloLabor.Enfermedad_Maternidad, Enumerados.enumEstadoModeloLabor.Maternidad
              If DiaAsi_Asistencia Then
                _dia = IIf(DiaAsi_Jornada = 0, 0, IIf(DiaAsi_Jornada < Tarea.Tarea_Meta, DiaAsi_Jornada / Tarea.Tarea_Meta, 1))
              End If
          End Select
        End If
      End If
      Return _dia
    End Get
  End Property

  Public ReadOnly Property DiaAsi_Falta() As Decimal
    Get
      Dim _dia As Decimal = 0
      If Asistencia.Asiste_TurnosRotativos Then
        Select Case Pardet_EstadoDiaEnum
          Case Enumerados.enumEstadoModeloLabor.DiaLibre
          Case Else
            _dia = IIf(DiaAsi_Jornada + DiaAsi_Sobret25 + DiaAsi_Sobret50 + DiaAsi_Sobret100 + DiaAsi_Sobret100b = 0, 1, 0)
        End Select
      Else
        If Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday) Then
          Select Case Pardet_EstadoDiaEnum
            Case Enumerados.enumEstadoModeloLabor.DiaLibre
              _dia = 0
            Case Enumerados.enumEstadoModeloLabor.Feriado
            Case Enumerados.enumEstadoModeloLabor.Normal, Enumerados.enumEstadoModeloLabor.Permiso, Enumerados.enumEstadoModeloLabor.Enfermedad_Maternidad, Enumerados.enumEstadoModeloLabor.Maternidad
              _dia = IIf(DiaAsi_Jornada = 0, 1, IIf(DiaAsi_Jornada < Tarea.Tarea_Meta, 0.5, 0))
          End Select
        End If
      End If
      Return _dia
    End Get
  End Property

  Public ReadOnly Property DiaAsi_vacaciones() As Decimal
    Get
      If Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Vacaciones Then
        'Select Case DiaAsi_Fecha.DayOfWeek
        '  Case DayOfWeek.Sunday, DayOfWeek.Saturday
        '    Return mDiaAsi_Integrales
        '  Case Else
        Return 1
        'End Select
      Else
        Return 0
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_valorsubmatenf() As Decimal
  '  Get
  '    Dim _valor As Decimal = 0
  '    If Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Enfermedad_Maternidad Then
  '      _valor = DiaAsi_ValorH0 + DiaAsi_ValorH25 + DiaAsi_ValorH50 + DiaAsi_ValorH100 + DiaAsi_ValorIntegral + DiaAsi_ValorHLibre
  '      _valor = _valor * (100 - Asistencia.Asiste_PorcSubMatEnf) / 100
  '    End If
  '    Return _valor
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_Valorvacaciones() As Decimal
  '  Get
  '    Return (Asistencia.Asiste_SueldoBase / 30) * DiaAsi_vacaciones
  '  End Get
  'End Property

#Region "H0"
  Public ReadOnly Property DiaAsi_H0() As Integer
    Get
      Dim _jornada As Integer = 0

      If Asistencia.Asiste_TurnosRotativos Then
        Select Case Pardet_EstadoDiaEnum
          Case Enumerados.enumEstadoModeloLabor.Normal
            _jornada = 8
          Case Enumerados.enumEstadoModeloLabor.Permiso
            _jornada = 0
        End Select
      Else
        'si asistio y no es fin de semana y es un dia normal o permiso
        If (Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday)) Then
          Select Case Pardet_EstadoDiaEnum
            Case Enumerados.enumEstadoModeloLabor.Normal, Enumerados.enumEstadoModeloLabor.Permiso, Enumerados.enumEstadoModeloLabor.Enfermedad_Maternidad, Enumerados.enumEstadoModeloLabor.Maternidad
              If DiaAsi_Asistencia Then
                _jornada = HorasJornada
              End If
            Case Enumerados.enumEstadoModeloLabor.DiaLibre
              _jornada = 0
            Case Enumerados.enumEstadoModeloLabor.Feriado
              If Not (Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.PorHoras Or Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Destajo) Then
                _jornada = 8
              End If
          End Select
        End If
      End If
      Return _jornada
    End Get
  End Property

  Public ReadOnly Property HorasJornada() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        If Me.Asistencia.Asiste_TurnosRotativos Then
          If DiaAsi_Jornada = 0 Then
            Return 0
          Else
            Return 8
          End If
        Else
          Return DiaAsi_Jornada / Tarea.Tarea_Meta * 8
        End If
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_ValorH0() As Decimal
  '  Get
  '    Return (Asistencia.Asiste_SueldoBase / 30) / 8 * DiaAsi_H0
  '  End Get
  'End Property
#End Region

#Region "H25"
  Public ReadOnly Property DiaAsi_H25() As Integer
    Get
      If Asistencia.Asiste_TurnosRotativos Then
        'si asistio y es un dia normal o permiso
        'If (DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Permiso Then
        Return HorasSobretiempo25
        'Else
        'Return 0
        'End If
      Else
        'si asistio y no es fin de semana y es un dia normal o permiso
        If (DiaAsi_Asistencia And (Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday)) And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Permiso Then
          Return HorasSobretiempo25
        Else
          Return 0
        End If
      End If
    End Get
  End Property

  Public ReadOnly Property HorasSobretiempo25() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        Return DiaAsi_Sobret25 / Tarea.Tarea_Meta * 8 * (1 + Tarea.Tarea_PorcSobreProduccion / 100)
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_ValorH25() As Decimal
  '  Get
  '    Return DiaAsi_H25 * IIf(Asistencia.Asiste_ValHExhora25 = 0, (Asistencia.Asiste_SueldoBase / 30 / 8) * ConfigRoles.Cnfrol_factorHora25, Asistencia.Asiste_ValHExhora25)
  '  End Get
  'End Property
#End Region

#Region "H50"
  Public ReadOnly Property DiaAsi_H50() As Integer
    Get
      If Asistencia.Asiste_TurnosRotativos Then
        'si asistio y no es fin de semana y es un dia normal o permiso
        'If (DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Permiso Then
        Return HorasSobretiempo50
        'Else
        '  Return 0
        'End If
      Else
        'si asistio y no es fin de semana y es un dia normal o permiso
        If (DiaAsi_Asistencia And (Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday)) And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Permiso Then
          Return HorasSobretiempo50
        Else
          Return 0
        End If
      End If
    End Get
  End Property
  Public ReadOnly Property HorasSobretiempo50() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        Return DiaAsi_Sobret50 / Tarea.Tarea_Meta * 8 * (1 + Tarea.Tarea_PorcSobreProduccion / 100)
      End If
    End Get
  End Property
  'Public ReadOnly Property DiaAsi_ValorH50() As Decimal
  '  Get
  '    Return DiaAsi_H50 * IIf(Asistencia.Asiste_ValHExhora50 = 0, (Asistencia.Asiste_SueldoBase / 30 / 8) * ConfigRoles.Cnfrol_factorHora50, Asistencia.Asiste_ValHExhora50)
  '  End Get
  'End Property
#End Region

#Region "H100"
  Public ReadOnly Property DiaAsi_H100() As Integer
    Get
      Dim horas As Integer = 0
      If Asistencia.Asiste_TurnosRotativos Then
        'If (DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Feriado Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.DiaLibre Then
        horas = HorasSobretiempo100
        'Else
        '  horas = 0
        'End If
      Else
        If ((DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday) And DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Feriado Then
          horas = 0 'HorasJornada + HorasSobretiempo50 + HorasSobretiempo25 + HorasSobretiempo100
        Else
          horas = HorasSobretiempo100
        End If
      End If
      Return horas
    End Get
  End Property

  Public ReadOnly Property HorasSobretiempo100() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        Return DiaAsi_Sobret100 / Tarea.Tarea_Meta * 8 * (1 + Tarea.Tarea_PorcSobreProduccion / 100)
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_ValorH100() As Decimal
  '  Get
  '    Return DiaAsi_H100 * IIf(Asistencia.Asiste_ValHExhora100 = 0, (Asistencia.Asiste_SueldoBase / 30 / 8) * ConfigRoles.Cnfrol_factorHora100, Asistencia.Asiste_ValHExhora100)
  '  End Get
  'End Property
#End Region

#Region "H100b"
  Public ReadOnly Property DiaAsi_H100b() As Integer
    Get
      Dim horas As Integer = 0
      If Asistencia.Asiste_TurnosRotativos Then
        'If (DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Feriado Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.DiaLibre Then
        horas = HorasSobretiempo100b
        'Else
        '  horas = 0
        'End If
      Else
        If ((DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday) And DiaAsi_Asistencia And Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Normal) Or Pardet_EstadoDiaEnum = Enumerados.enumEstadoModeloLabor.Feriado Then
          horas = HorasJornada + HorasSobretiempo50 + HorasSobretiempo25 + HorasSobretiempo100 + HorasSobretiempo100b
        Else
          horas = HorasSobretiempo100b
        End If
      End If
      Return horas
    End Get
  End Property

  Public ReadOnly Property HorasSobretiempo100b() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        Return DiaAsi_Sobret100b / Tarea.Tarea_Meta * 8 * (1 + Tarea.Tarea_PorcSobreProduccion / 100)
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_ValorH100b() As Decimal
  '  Get
  '    Return DiaAsi_H100b * IIf(Asistencia.Asiste_ValHExhora100 = 0, (Asistencia.Asiste_SueldoBase / 30 / 8) * ConfigRoles.Cnfrol_factorHora100, Asistencia.Asiste_ValHExhora100)
  '  End Get
  'End Property
#End Region

#Region "HLibre"
  Public ReadOnly Property DiaAsi_HLibre() As Integer
    Get
      Dim _jornada As Integer = 0

      'si asistio y no es fin de semana y es un dia normal o permiso
      If (Not (DiaAsi_Fecha.DayOfWeek = DayOfWeek.Saturday Or DiaAsi_Fecha.DayOfWeek = DayOfWeek.Sunday)) Then
        Select Case Pardet_EstadoDiaEnum
          Case Enumerados.enumEstadoModeloLabor.DiaLibre
            If DiaAsi_Asistencia Then
              _jornada = HorasLibres
            End If
        End Select
      End If
      Return _jornada
    End Get
  End Property

  Public ReadOnly Property HorasLibres() As Decimal
    Get
      If Tarea Is Nothing OrElse Tarea.Tarea_Meta = 0 Then
        Return 0
      Else
        Return (DiaAsi_Jornada + DiaAsi_Sobret25 + DiaAsi_Sobret50 + DiaAsi_Sobret100 + DiaAsi_Sobret100b) / Tarea.Tarea_Meta * 8 * (1 + Tarea.Tarea_PorcSobreProduccion / 100)
      End If
    End Get
  End Property

  'Public ReadOnly Property DiaAsi_ValorHLibre() As Decimal
  '  Get
  '    Return (Asistencia.Asiste_SueldoBase / 30) / 8 * DiaAsi_HLibre
  '  End Get
  'End Property
#End Region

  'Public ReadOnly Property DiaAsi_Valoradicional() As Decimal
  '  Get
  '    Return Asistencia.Asiste_AdicionalMensual / 30 * (DiaAsi_diario + DiaAsi_integrales)
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_Valortransporte() As Decimal
  '  Get
  '    If Me.Asistencia.Asiste_TurnosRotativos Then
  '      Return Asistencia.Asiste_TransporteMensual / 30 * 1
  '    Else
  '      Return Asistencia.Asiste_TransporteMensual / 30 * (DiaAsi_diario + DiaAsi_integrales)
  '    End If
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_ValorCompSal() As Decimal
  '  Get
  '    Return Asistencia.Asiste_ICSMensual / 30 * (DiaAsi_diario + DiaAsi_integrales)
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_ValorIESS() As Decimal
  '  Get
  '    If Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.PorHoras Or Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Destajo Or (Me.Asistencia.Contrato IsNot Nothing AndAlso Not Me.Asistencia.Contrato.Contra_afiliess) Then
  '      Return 0
  '    Else
  '      Return (DiaAsi_ValorH0 + DiaAsi_ValorIntegral + DiaAsi_Valoradicional + DiaAsi_ValorHLibre + DiaAsi_ValorH25 + DiaAsi_ValorH50 + DiaAsi_ValorH100 - DiaAsi_valorsubmatenf) * Asistencia.Asiste_PorcentajeIESS / 100
  '    End If
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_D3pag() As Decimal
  '  Get
  '    If Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Temporada Then
  '      Return ((DiaAsi_ValorH0 + DiaAsi_ValorIntegral) + DiaAsi_ValorH25 + DiaAsi_ValorH50 + DiaAsi_ValorH100 + DiaAsi_ValorCompSal + DiaAsi_Valoradicional + DiaAsi_ValorHLibre) / 12
  '    Else
  '      Return 0
  '    End If
  '  End Get
  'End Property

  'Public ReadOnly Property DiaAsi_Vacpag() As Decimal
  '  Get
  '    If Asistencia.Tipocontrato.Pardet_TipoContratoEnum = Enumerados.enumTipoContrato.Temporada Then
  '      Return ((DiaAsi_ValorH0 + DiaAsi_ValorIntegral) + DiaAsi_ValorH25 + DiaAsi_ValorH50 + DiaAsi_ValorH100 + DiaAsi_ValorCompSal + DiaAsi_Valoradicional + DiaAsi_ValorHLibre) / 24
  '    Else
  '      Return 0
  '    End If
  '  End Get
  'End Property
#End Region

  'Public ReadOnly Property HorasMaximasxDia() As Integer
  '  Get
  '    If DiaAsi_Lactancia Then
  '      Return 6
  '    Else
  '      Return 8
  '    End If
  '  End Get
  'End Property

  Public ReadOnly Property HorasTrab() As Integer
    Get
      Return DiaAsi_Jornada + DiaAsi_Sobret25 + DiaAsi_Sobret50 + DiaAsi_Sobret100 + DiaAsi_Sobret100b
    End Get
  End Property

  Public ReadOnly Property HorasTrabAux() As Integer
    Get
      Return DiaAsi_Jornadaaux + DiaAsi_Sobret25aux + DiaAsi_Sobret50aux + DiaAsi_Sobret100aux + DiaAsi_Sobret100baux
    End Get
  End Property

  'Private mDiasEnfermedad_Maternidad As Integer = 0
  'Public Property DiasEnfermedad_Maternidad() As Integer
  '  Get
  '    Return mDiasEnfermedad_Maternidad
  '  End Get
  '  Set(ByVal value As Integer)
  '    mDiasEnfermedad_Maternidad = value
  '  End Set
  'End Property


  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Entida_Codigo = CType(Fila("Entida_Codigo"), Integer)
    Patron_Codigo = CType(Fila("Patron_Codigo"), Integer)
    PerPag_FechaDesde = CType(Fila("PerPag_FechaDesde"), Date)
    Parame_PeriodoPago = CType(Fila("Parame_PeriodoPago"), Integer)
    Pardet_PeriodoPago = CType(Fila("Pardet_PeriodoPago"), Integer)
    DiaAsi_Fecha = CType(Fila("DiaAsi_Fecha"), Date)
    Tarea_Codigo = CType(Fila("Tarea_Codigo"), Integer)
    DiaAsi_Jornada = CType(Fila("DiaAsi_Jornada"), Integer)
    DiaAsi_Sobret25 = CType(Fila("DiaAsi_Sobret25"), Integer)
    DiaAsi_Sobret50 = CType(Fila("DiaAsi_Sobret50"), Integer)
    DiaAsi_Sobret100 = CType(Fila("DiaAsi_Sobret100"), Integer)
    DiaAsi_Sobret100b = CType(Fila("DiaAsi_Sobret100b"), Integer)
    DiaAsi_Jornadaaux = CType(Fila("DiaAsi_Jornadaaux"), Integer)
    DiaAsi_Sobret25aux = CType(Fila("DiaAsi_Sobret25aux"), Integer)
    DiaAsi_Sobret50aux = CType(Fila("DiaAsi_Sobret50aux"), Integer)
    DiaAsi_Sobret100aux = CType(Fila("DiaAsi_Sobret100aux"), Integer)
    DiaAsi_Sobret100baux = CType(Fila("DiaAsi_Sobret100baux"), Integer)
    Empres_Codigo = CType(Fila("Empres_Codigo"), Integer)
    Sucurs_Codigo = CType(Fila("Sucurs_Codigo"), Integer)
    Parame_Departamento = CType(Fila("Parame_Departamento"), Integer)
    Pardet_Departamento = CType(Fila("Pardet_Departamento"), Integer)
    mPardetDepartamento = Nothing
    If TypeOf Fila("Pardet_Area") Is DBNull Then
      Parame_Area = 0
      Pardet_Area = 0
    Else
      Parame_Area = CInt(Fila("Parame_Area"))
      Pardet_Area = CInt(Fila("Pardet_Area"))
    End If
    mPardetArea = Nothing

    Cargo_Secuencia = CInt(Fila("Cargo_Secuencia"))

    If TypeOf Fila("Pardet_Lote") Is DBNull Then
      Parame_Lote = 0
      Pardet_Lote = 0
    Else
      Parame_Lote = CInt(Fila("Parame_Lote"))
      Pardet_Lote = CInt(Fila("Pardet_Lote"))
    End If
    mPardetLote = Nothing

    DiaAsi_Asistencia = CType(Fila("DiaAsi_Asistencia"), Boolean)
    Parame_EstadoDia = CType(Fila("Parame_EstadoDia"), Integer)
    Pardet_EstadoDia = CType(Fila("Pardet_EstadoDia"), Integer)
    'DiaAsi_Diario = CType(Fila("DiaAsi_Diario"), Integer)
    DiaAsi_integrales = CType(Fila("DiaAsi_Integrales"), Decimal)
    DiaAsi_Lactancia = CBool(Fila("DiaAsi_Lactancia"))
    'DiaAsi_Vacaciones = CType(Fila("DiaAsi_Vacaciones"), Integer)
    'DiaAsi_H0 = CType(Fila("DiaAsi_H0"), Integer)
    'DiaAsi_H50 = CType(Fila("DiaAsi_H50"), Integer)
    'DiaAsi_H100 = CType(Fila("DiaAsi_H100"), Integer)
    'DiaAsi_ValorIntegral = CType(Fila("DiaAsi_ValorIntegral"), Decimal)
    'DiaAsi_ValorH0 = CType(Fila("DiaAsi_ValorH0"), Decimal)
    'DiaAsi_ValorVacaciones = CType(Fila("DiaAsi_ValorVacaciones"), Decimal)
    'DiaAsi_ValorH50 = CType(Fila("DiaAsi_ValorH50"), Decimal)
    'DiaAsi_ValorH100 = CType(Fila("DiaAsi_ValorH100"), Decimal)
    'DiaAsi_ValorSubMatEnf = CType(Fila("DiaAsi_ValorSubMatEnf"), Decimal)
    'DiaAsi_ValorAdicional = CType(Fila("DiaAsi_ValorAdicional"), Decimal)
    'DiaAsi_ValorTransporte = CType(Fila("DiaAsi_ValorTransporte"), Decimal)
    'DiaAsi_ValorCompSal = CType(Fila("DiaAsi_ValorCompSal"), Decimal)
    'DiaAsi_ValorIESS = CType(Fila("DiaAsi_ValorIESS"), Decimal)
    'DiaAsi_D3Pag = CType(Fila("DiaAsi_D3Pag"), Decimal)
    'DiaAsi_VacPag = CType(Fila("DiaAsi_VacPag"), Decimal)
    mAsistencia = Nothing
    'mLabor = Nothing
    mTarea = Nothing
    mPardetEstadoDia = Nothing
    mSucursal = Nothing
    mPatrono = Nothing
    mConfigRoles = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If

    Dim _EstasEnTransaccion As Boolean = OperadorDatos.EstaenTransaccion()

    Dim _tipcon As TipoContrato = Me.Asistencia.Tipocontrato
    Dim _contrato As Contrato = Me.Asistencia.Contrato
    Dim _h0 As Integer = DiaAsi_H0
    Dim _h25 As Integer = DiaAsi_H25
    Dim _h50 As Integer = DiaAsi_H50
    Dim _h100 As Integer = DiaAsi_H100
    Dim _h100b As Integer = DiaAsi_H100b
    Dim _HLibre As Integer = DiaAsi_HLibre

    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.AgregarParametro("@Tarea_Codigo", Tarea_Codigo)
    OperadorDatos.AgregarParametro("@DiaAsi_Jornada", DiaAsi_Jornada)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret25", DiaAsi_Sobret25)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret50", DiaAsi_Sobret50)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret100", DiaAsi_Sobret100)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret100b", DiaAsi_Sobret100b)
    OperadorDatos.AgregarParametro("@DiaAsi_Jornadaaux", DiaAsi_Jornadaaux)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret25aux", DiaAsi_Sobret25aux)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret50aux", DiaAsi_Sobret50aux)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret100aux", DiaAsi_Sobret100aux)
    OperadorDatos.AgregarParametro("@DiaAsi_Sobret100baux", DiaAsi_Sobret100baux)
    OperadorDatos.AgregarParametro("@Empres_Codigo", Empres_Codigo)
    OperadorDatos.AgregarParametro("@Sucurs_Codigo", Sucurs_Codigo)
    OperadorDatos.AgregarParametro("@Parame_Departamento", Parame_Departamento)
    OperadorDatos.AgregarParametro("@Pardet_Departamento", Pardet_Departamento)
    OperadorDatos.AgregarParametro("@Parame_Area", Parame_Area)
    OperadorDatos.AgregarParametro("@Pardet_Area", Pardet_Area)
    OperadorDatos.AgregarParametro("@Cargo_Secuencia", Cargo_Secuencia)
    If Pardet_Lote > 0 Then
      OperadorDatos.AgregarParametro("@Parame_Lote", Parame_Lote)
      OperadorDatos.AgregarParametro("@Pardet_Lote", Pardet_Lote)
    End If
    OperadorDatos.AgregarParametro("@DiaAsi_Asistencia", DiaAsi_Asistencia)
    OperadorDatos.AgregarParametro("@Parame_EstadoDia", Parame_EstadoDia)
    OperadorDatos.AgregarParametro("@Pardet_EstadoDia", Pardet_EstadoDia)
    OperadorDatos.AgregarParametro("@DiaAsi_Diario", DiaAsi_diario)
    OperadorDatos.AgregarParametro("@DiaAsi_Integrales", DiaAsi_integrales)
    OperadorDatos.AgregarParametro("@DiaAsi_Vacaciones", DiaAsi_vacaciones)
    OperadorDatos.AgregarParametro("@DiaAsi_H0", _h0)
    OperadorDatos.AgregarParametro("@DiaAsi_H25", _H25)
    OperadorDatos.AgregarParametro("@DiaAsi_H50", _H50)
    OperadorDatos.AgregarParametro("@DiaAsi_H100", _H100)
    OperadorDatos.AgregarParametro("@DiaAsi_H100b", _H100b)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorIntegral", DiaAsi_ValorIntegral)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorVacaciones", DiaAsi_Valorvacaciones)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorH0", DiaAsi_ValorH0)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorH25", DiaAsi_ValorH25)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorH50", DiaAsi_ValorH50)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorH100", DiaAsi_ValorH100)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorH100b", DiaAsi_ValorH100b)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorSubMatEnf", DiaAsi_valorsubmatenf)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorAdicional", DiaAsi_Valoradicional)
    OperadorDatos.AgregarParametro("@DiaAsi_HLibre", _HLibre)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorHLibre", DiaAsi_ValorHLibre)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorTransporte", DiaAsi_Valortransporte)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorCompSal", DiaAsi_ValorCompSal)
    'OperadorDatos.AgregarParametro("@DiaAsi_ValorIESS", DiaAsi_ValorIESS)
    'OperadorDatos.AgregarParametro("@DiaAsi_D3Pag", DiaAsi_D3pag)
    'OperadorDatos.AgregarParametro("@DiaAsi_VacPag", DiaAsi_Vacpag)
    OperadorDatos.AgregarParametro("@DiaAsi_Lactancia", DiaAsi_Lactancia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If Not _EstasEnTransaccion Then
        AceptarCambios()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Entida_Codigo", Entida_Codigo)
    OperadorDatos.AgregarParametro("@Patron_Codigo", Patron_Codigo)
    OperadorDatos.AgregarParametro("@PerPag_FechaDesde", PerPag_FechaDesde)
    OperadorDatos.AgregarParametro("@Parame_PeriodoPago", Parame_PeriodoPago)
    OperadorDatos.AgregarParametro("@Pardet_PeriodoPago", Pardet_PeriodoPago)
    OperadorDatos.AgregarParametro("@DiaAsi_Fecha", DiaAsi_Fecha)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "DiaAsistenciaList"
Public Class DiaAsistenciaList
  Inherits System.ComponentModel.BindingList(Of DiaAsistencia)
  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _filtro As String = "") As DiaAsistenciaList
    Dim oResult As DiaAsistenciaList = New DiaAsistenciaList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_DiaAsistencia"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New DiaAsistencia(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, ByVal _patrono As Patrono, ByVal desde As Date, ByVal hasta As Date) As DiaAsistenciaList
    Dim oResult As New DiaAsistenciaList
    Dim bReturn As Boolean
    Dim dsResult As New DataTable
    With _OperadorDatos
      .AgregarParametro("@accion", "GP")
      .AgregarParametro("@Patron_Codigo", _patrono.Patron_Codigo)
      '.AgregarParametro("@hac_codigo", _patrono.Hac_codigo)
      .AgregarParametro("@desde", desde)
      .AgregarParametro("@hasta", hasta)
      .Procedimiento = "proc_DiaAsistencia"
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso dsResult IsNot Nothing AndAlso dsResult.Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Rows
        Dim _obj As New DiaAsistencia(_OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub

  'Importacion de Marcaciones de EasyMark
  Public Shared Function EjecutarImportarMarcacion(ByVal _OperadorDatos As OperadorDatos, ByVal _desde As Date, ByVal _hasta As Date, ByVal _sala As Integer) As Boolean
    Dim bReturn As Boolean
    With _OperadorDatos
      .AgregarParametro("@Desde", _desde)
      .AgregarParametro("@Hasta", _hasta)
      .AgregarParametro("@Codigo_Sala", _sala)
      .Procedimiento = "proc_ImportarMarcacion"
      bReturn = .Ejecutar()
      .LimpiarParametros()
    End With
    Return bReturn
  End Function
End Class
#End Region
