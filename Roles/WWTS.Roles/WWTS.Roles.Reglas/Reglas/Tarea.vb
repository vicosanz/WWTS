'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

#Region "Tarea"
Public Class Tarea

  Const _Procedimiento As String = "proc_Tarea"



  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Tarea_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Tarea_Codigo = _Tarea_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Tarea")
    End If
  End Sub

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Tarea_Codigo = CType(Fila("Tarea_Codigo"), Integer)
    Tarea_Descripcion = CType(Fila("Tarea_Descripcion"), String)
    Tarea_Meta = CType(Fila("Tarea_Meta"), Integer)
    Tarea_SobreProduccion = CType(Fila("Tarea_SobreProduccion"), Boolean)
    Tarea_PorcSobreProduccion = CType(Fila("Tarea_PorcSobreProduccion"), Decimal)
    Tarea_Predeterminado = CInt(Fila("Tarea_Predeterminado"))
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As New DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Tarea_Codigo", Tarea_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Tarea_Codigo", Tarea_Codigo)
    OperadorDatos.AgregarParametro("@Tarea_Descripcion", Tarea_Descripcion)
    OperadorDatos.AgregarParametro("@Tarea_Meta", Tarea_Meta)
    OperadorDatos.AgregarParametro("@Tarea_SobreProduccion", Tarea_SobreProduccion)
    OperadorDatos.AgregarParametro("@Tarea_PorcSobreProduccion", Tarea_PorcSobreProduccion)
    OperadorDatos.AgregarParametro("@Tarea_Predeterminado", Tarea_Predeterminado)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Tarea_Codigo", Tarea_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "TareaList"
Public Class TareaList
  Inherits System.ComponentModel.BindingList(Of Tarea)
  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _filtro As String = "") As TareaList
    Dim oResult As TareaList = New TareaList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Tarea"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso ds IsNot Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Tarea(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
