'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports System.Data.SqlClient
Imports System.Data.OleDb

#Region "ParametroReporte"
Public Class ParametroReporte
  Private mOperadorDatos As OperadorDatos = Nothing

  Private mNombreParametro As String = String.Empty

  Public Property NombreParametro() As String
    Get
      Return mNombreParametro
    End Get
    Set(ByVal value As String)
      mNombreParametro = value
    End Set
  End Property

  Public ReadOnly Property Oculto() As Boolean
    Get
      Return mNombreParametro.ToUpper.StartsWith("@OCU_")
    End Get
  End Property

  Public ReadOnly Property Clave() As Boolean
    Get
      Return mNombreParametro.ToUpper.StartsWith("@KEY_")
    End Get
  End Property

  Public ReadOnly Property SoloLectura() As Boolean
    Get
      Return mNombreParametro.ToUpper.StartsWith("@READ_")
    End Get
  End Property

  Public ReadOnly Property NombreColumna() As String
    Get
      Dim _nombre As String = mNombreParametro
      If _nombre.ToUpper.Contains("__FN") Then
        Try
          mDecimales = CInt(_nombre.Substring(_nombre.ToUpper.IndexOf("__FN") + 4))
        Catch ex As Exception
        End Try
        _nombre = _nombre.Substring(0, _nombre.ToUpper.IndexOf("__FN"))
      End If

      _nombre = _nombre.ToLower.Replace("@cbo_", "").Replace("@cba_", "").Replace("@ocu_", "").Replace("@key_", "").Replace("@read_", "").Replace("_", " ").Trim
      If _nombre.Chars(0) = "@" Then
        _nombre = _nombre.Substring(1)
      End If
      _nombre = _nombre.Substring(0, 1).ToUpper + _nombre.Substring(1).ToLower

      Return _nombre
    End Get
  End Property

  Private mTipoDato As String = String.Empty

  Public Property TipoDato() As String
    Get
      Return mTipoDato
    End Get
    Set(ByVal value As String)
      mTipoDato = value
    End Set
  End Property

  Enum EnumTipoDato
    Entero
    Decimales
    Texto
    Fecha
    Logico
    Combo
    ComboActualizable
  End Enum

  Private mDecimales As Integer = 2

  Public Property Decimales() As Integer
    Get
      If TipoDato.ToUpper = "MONEY" Then
        Return 2
      End If
      Return mDecimales
    End Get
    Set(ByVal value As Integer)
      mDecimales = value
    End Set
  End Property

  Public ReadOnly Property TipoDatoNet() As EnumTipoDato
    Get
      If mNombreParametro.ToLower.Contains("cbo_") Then
        Return EnumTipoDato.Combo
      End If
      If mNombreParametro.ToLower.Contains("cba_") Then
        Return EnumTipoDato.ComboActualizable
      End If
      Select Case mTipoDato.ToUpper
        Case "NVARCHAR", "CHAR", "NCHAR", "NTEXT", "VARCHAR", "TEXT"
          Return EnumTipoDato.Texto
        Case "BIGINT", "INT", "SMALLINT", "TINYINT"
          Return EnumTipoDato.Entero
        Case "DECIMAL", "FLOAT", "MONEY", "NUMERIC", "REAL", "SMALLMONEY"
          Return EnumTipoDato.Decimales
        Case "DATETIME", "SMALLDATETIME"
          Return EnumTipoDato.Fecha
        Case "BIT"
          Return EnumTipoDato.Logico
        Case Else
          Return EnumTipoDato.Texto
      End Select
    End Get
  End Property

  Private mValor As Object = Nothing
  Public Property Valor() As Object
    Get
      Return mValor
    End Get
    Set(ByVal value As Object)
      mValor = value
    End Set
  End Property

  Private mValorAux As Object = Nothing
  Public Property ValorAux() As Object
    Get
      Return mValorAux
    End Get
    Set(ByVal value As Object)
      mValorAux = value
    End Set
  End Property

  Public Sub New(ByVal _OperadorDatos As OperadorDatos)
    MyBase.New()
    mOperadorDatos = _OperadorDatos
  End Sub

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    mNombreParametro = CType(Fila(0), String)
    mTipoDato = CType(Fila(1), String)
    Try
      mDecimales = CType(Fila(2), Integer)
    Catch ex As Exception
    End Try
  End Sub
End Class
#End Region

#Region "ParametroReporteList"
Public Class ParametroReporteList
  Inherits System.ComponentModel.BindingList(Of ParametroReporte)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, ByVal _Reporte As Reporte) As ParametroReporteList
    Dim oResult As ParametroReporteList = New ParametroReporteList
    Dim ds As DataTable = Nothing

    Try
      If _OperadorDatos.Proveedor = enumProveedorDatos.SQL Then
        Dim _comando As New SqlClient.SqlCommand
        _comando.Connection = _OperadorDatos.Conexion
        _comando.CommandType = CommandType.Text
        _comando.CommandText = String.Format("select PARAMETER_NAME, DATA_TYPE, NUMERIC_SCALE FROM INFORMATION_SCHEMA.PARAMETERS where specific_name='{0}' and not PARAMETER_NAME='@Accion' and not PARAMETER_NAME='@AccionDatos'", _Reporte.NombreProcedimiento)

        Dim da As New SqlDataAdapter(_comando)
        ds = New DataTable
        da.Fill(ds)

        If Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
          For Each _dr As DataRow In ds.Rows
            Dim _fila As New ParametroReporte(_OperadorDatos)
            _fila.MapearDataRowaObjeto(_dr)
            oResult.Add(_fila)
          Next
        End If
      ElseIf _OperadorDatos.Proveedor = enumProveedorDatos.Sybase Then
        Dim _comando As OleDbCommand
        _comando = New OleDbCommand
        _comando.CommandType = CommandType.StoredProcedure
        _comando.Connection = _OperadorDatos.Conexion
        _comando.CommandTimeout = 180
        _comando.CommandText = "Proc_ObtenerSPParametros"

        Dim oledbparam As New OleDbParameter
        oledbparam.DbType = DbType.String
        oledbparam.OleDbType = OleDbType.VarChar
        oledbparam.Value = _Reporte.NombreProcedimiento
        oledbparam.ParameterName = "@sp"
        oledbparam.Direction = ParameterDirection.Input

        _comando.Parameters.Add(oledbparam)
        _comando.Connection = _OperadorDatos.Conexion

        Dim da As New OleDbDataAdapter(_comando)

        ds = New DataTable
        da.Fill(ds)

        If Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
          For Each _dr As DataRow In ds.Rows
            Dim _colname As String = _dr(0).ToString.ToLower.Trim
            If _colname.StartsWith("@") And Not _colname.ToUpper = "@ACCION" And Not _colname.ToUpper = "@ACCIONDATOS" Then
              Dim _fila As New ParametroReporte(_OperadorDatos)
              _fila.MapearDataRowaObjeto(_dr)
              oResult.Add(_fila)
            End If
          Next
        End If

      End If
    Catch ex As Exception

    End Try
    Return oResult
  End Function

  Public Sub New()
  End Sub
End Class
#End Region
