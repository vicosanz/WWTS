'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Text.RegularExpressions
Imports System.Xml
Imports System.Xml.Serialization
Imports Infoware.Reglas

#Region "Usuario"
Partial Public Class Usuario
	Inherits _Database

	Private mUsuari_Codigo As String = String.Empty
	Private mUsuari_Descripcion As String = String.Empty
	Private mUsuari_Password As String = String.Empty
	Private mUsuari_Mensaje As String = String.Empty
	Private mUsuari_RegEntSal As Boolean = True
	Private mUsuari_RegIngModEli As Boolean = True
	Private mUsuari_RegImp As Boolean = True
	Private mUsuari_RegConfidencial As Boolean = True
	Private mUsuari_CambiarContrasena As Boolean = False

	Public Sub New()
		MyBase.New()
	End Sub

	<XmlAttribute()>
	Public Property Usuari_Codigo() As String
		Get
			Return Me.mUsuari_Codigo
		End Get
		Set(ByVal value As String)
			Me.mUsuari_Codigo = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_Descripcion() As String
		Get
			Return Me.mUsuari_Descripcion
		End Get
		Set(ByVal Value As String)
			mUsuari_Descripcion = Value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_Password() As String
		Get
			Return Me.mUsuari_Password
		End Get
		Set(ByVal Value As String)
			If Not String.IsNullOrWhiteSpace(Value) Then
				Dim match As Match = Regex.Match(Value, "^(?=(.*\d){1})(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z\d]).{8,}$", RegexOptions.IgnoreCase)
				If Not match.Success Then
					Throw New Exception("La contraseña debe tener al menos una mayúscula, una minúscula, un número y un caracter especial")
				End If
			End If
			mUsuari_Password = Value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_Mensaje() As String
		Get
			Return Me.mUsuari_Mensaje
		End Get
		Set(ByVal value As String)
			Me.mUsuari_Mensaje = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_RegEntSal() As Boolean
		Get
			Return Me.mUsuari_RegEntSal
		End Get
		Set(ByVal value As Boolean)
			Me.mUsuari_RegEntSal = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_RegIngModEli() As Boolean
		Get
			Return Me.mUsuari_RegIngModEli
		End Get
		Set(ByVal value As Boolean)
			Me.mUsuari_RegIngModEli = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_RegImp() As Boolean
		Get
			Return Me.mUsuari_RegImp
		End Get
		Set(ByVal value As Boolean)
			Me.mUsuari_RegImp = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_RegConfidencial() As Boolean
		Get
			Return Me.mUsuari_RegConfidencial
		End Get
		Set(ByVal value As Boolean)
			Me.mUsuari_RegConfidencial = value
			EsModificado = True
		End Set
	End Property

	<XmlAttribute()>
	Public Property Usuari_CambiarContrasena() As Boolean
		Get
			Return Me.mUsuari_CambiarContrasena
		End Get
		Set(ByVal value As Boolean)
			mUsuari_CambiarContrasena = value
			EsModificado = True
		End Set
	End Property
End Class

#End Region
