'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "Auditoria"
Public Class Auditoria
  Const consTipoAccion = 10

  Enum enumTipoAccion
    IngresoSistema = 1
    SalidaSistema = 2
    Adicion = 3
    Modificacion = 4
    Eliminacion = 5
    Impresion = 6
    Confidencial = 7
  End Enum

  Const _Procedimiento As String = "proc_Auditoria"

  Private mRestriccion As Restriccion = Nothing

  Private mUsuario As Usuario = Nothing

  Private mPardetTipoAccion As ParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Usuari_Codigo As String, ByVal _Parame_Opciones As Integer, ByVal _Pardet_Opciones As Integer, ByVal _Audito_Secuencia As Integer)
    Me.New(_OperadorDatos, False)
    Usuari_Codigo = _Usuari_Codigo
    Parame_Opciones = _Parame_Opciones
    Pardet_Opciones = _Pardet_Opciones
    Audito_Secuencia = _Audito_Secuencia
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Auditoria")
    End If
  End Sub

  Public Sub New(ByVal _Restriccion As Restriccion)
    Me.New(_Restriccion.OperadorDatos, True)
    Restriccion = _Restriccion
  End Sub

  'Restriccion
  Public Overridable Property Restriccion() As Restriccion
    Get
      If Me.mRestriccion Is Nothing AndAlso Me.Pardet_Opciones > 0 Then
        Me.mRestriccion = New Restriccion(OperadorDatos, New ParametroDet(OperadorDatos, Me.Parame_Opciones, Me.Pardet_Opciones), New Usuario(OperadorDatos, Me.Usuari_Codigo))
      End If
      Return Me.mRestriccion
    End Get
    Set(ByVal value As Restriccion)
      Me.mRestriccion = value
      Me.Parame_Opciones = value.Parame_Opciones
      Me.Pardet_Opciones = value.Pardet_Opciones
      Me.Usuari_Codigo = value.Usuari_Codigo
    End Set
  End Property

  'Usuario
  Public Overridable Property Usuario() As Usuario
    Get
      If Me.mUsuario Is Nothing AndAlso Me.Usuari_Codigo > 0 Then
        Me.mUsuario = New Usuario(OperadorDatos, Me.Usuari_Codigo)
      End If
      Return mUsuario
    End Get
    Set(ByVal value As Usuario)
      Me.mUsuario = value
      Me.Usuari_Codigo = value.Usuari_Codigo
    End Set
  End Property

  Public Shadows Property Pardet_TipoAccionEnum() As enumTipoAccion
    Get
      Return CType(Pardet_TipoAccion, enumTipoAccion)
    End Get
    Set(ByVal value As enumTipoAccion)
      Parame_TipoAccion = consTipoAccion
      Pardet_TipoAccion = CInt(value)
    End Set
  End Property

  'ParametroDet
  Public Overridable Property PardetTipoAccion() As ParametroDet
    Get
      If Me.mPardetTipoAccion Is Nothing AndAlso Me.Pardet_TipoAccion > 0 Then
        Me.mPardetTipoAccion = New ParametroDet(OperadorDatos, Me.Parame_TipoAccion, Me.Pardet_TipoAccion)
      End If
      Return mPardetTipoAccion
    End Get
    Set(ByVal value As ParametroDet)
      Me.mPardetTipoAccion = value
      Parame_TipoAccion = value.Parame_Codigo
      Pardet_TipoAccion = value.Pardet_Secuencia
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Usuari_Codigo = CType(Fila("Usuari_Codigo"), String)
    Parame_Opciones = CType(Fila("Parame_Opciones"), Integer)
    Pardet_Opciones = CType(Fila("Pardet_Opciones"), Integer)
    Audito_Secuencia = CType(Fila("Audito_Secuencia"), Integer)
    Audito_Descripcion = CType(Fila("Audito_Descripcion"), String)
    Audito_FechaHora = CType(Fila("Audito_FechaHora"), Date)
    Parame_TipoAccion = CType(Fila("Parame_TipoAccion"), Integer)
    Pardet_TipoAccion = CType(Fila("Pardet_TipoAccion"), Integer)
    mRestriccion = Nothing
    mUsuario = Nothing
    mPardetTipoAccion = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    With OperadorDatos
      .AgregarParametro("@accion", "C")
      .AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
      .AgregarParametro("@Parame_Opciones", Parame_Opciones)
      .AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
      .AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(Result)
      .LimpiarParametros()
    End With
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    With OperadorDatos
      .AgregarParametro("@accion", sAccion)
      .AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
      .AgregarParametro("@Parame_Opciones", Parame_Opciones)
      .AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
      .AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
      .AgregarParametro("@Audito_Descripcion", Audito_Descripcion)
      .AgregarParametro("@Parame_TipoAccion", Parame_TipoAccion)
      .AgregarParametro("@Pardet_TipoAccion", Pardet_TipoAccion)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(Result)
      .LimpiarParametros()
    End With
    If bReturn Then
      If EsNuevo Then
        Audito_Secuencia = Result
      End If
      EsNuevo = False
      EsModificado = False
    End If
    Return bReturn
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
    OperadorDatos.AgregarParametro("@Parame_Opciones", Parame_Opciones)
    OperadorDatos.AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
    OperadorDatos.AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function

  Public Shared Function Registrar_Auditoria(ByVal _Restriccion As Restriccion, ByVal _TipoAccion As enumTipoAccion, Optional ByVal _Descripcion As String = "") As Boolean
    If _Restriccion Is Nothing Then
      Return False
    End If
    Select Case _TipoAccion
      Case enumTipoAccion.IngresoSistema, enumTipoAccion.SalidaSistema
        If Not _Restriccion.Usuario.Usuari_RegEntSal Then
          Return True
        End If
      Case enumTipoAccion.Adicion, enumTipoAccion.Modificacion, enumTipoAccion.Eliminacion
        If Not _Restriccion.Usuario.Usuari_RegIngModEli Then
          Return True
        End If
      Case enumTipoAccion.Impresion
        If Not _Restriccion.Usuario.Usuari_RegImp Then
          Return True
        End If
      Case enumTipoAccion.Confidencial
        If Not _Restriccion.Usuario.Usuari_RegConfidencial Then
          Return True
        End If
    End Select
    Dim _auditoria As New Auditoria(_Restriccion)
    _auditoria.Audito_Descripcion = _Descripcion
    _auditoria.Pardet_TipoAccion = _TipoAccion
    Return _auditoria.Guardar
  End Function
End Class
#End Region

#Region "AuditoriaList"
Public Class AuditoriaList
  Inherits System.ComponentModel.BindingList(Of Auditoria)

  Public Shared Function ObtenerListaxDescripcion(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _filtro As String = "") As AuditoriaList
    Dim oResult As AuditoriaList = New AuditoriaList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@accion", "FA")
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Auditoria"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Auditoria(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

End Class
#End Region
