'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.42
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos
Imports WWTS.General.Reglas

Public Class Embarque

#Region "Campos constantes"
  Private Const _Procedimiento As String = "proc_Embarque"
#End Region

#Region "Campos variables"
  Private mZafra As ZafraSiembra = Nothing
  Private mDestino As Destino = Nothing
#End Region

#Region "Propiedades públicas de la clase"

  Public Property Zafra() As ZafraSiembra
    Get
      If mZafra Is Nothing And Not mZaf_codigo.Trim = String.Empty Then
        mZafra = New ZafraSiembra(OperadorDatos, Me.mZaf_codigo, False)
      End If
      Return mZafra
    End Get
    Set(ByVal Value As ZafraSiembra)
      If Value Is Nothing Then
        Throw New ArgumentNullException("No se pudo enlazar Zafra")
      End If
      Me.mZafra = Value
      Me.mZaf_codigo = Value.Zaf_codigo
    End Set
  End Property
  Public Property Destino() As Destino
    Get
      If mDestino Is Nothing And mDes_codigo > 0 Then
        mDestino = New Destino(OperadorDatos, mDes_codigo, False)
      End If
      Return mDestino
    End Get
    Set(ByVal Value As Destino)
      If Value Is Nothing Then
        Throw New Exception("No se puede enlazar Destino")
      End If
      mDestino = Value
      mDes_codigo = Value.Des_codigo
    End Set
  End Property
  Public ReadOnly Property Descripcion() As String
    Get
      Return mEmb_codigo & "-" & Destino.Des_nombre
    End Get
  End Property
#End Region

#Region "Constructores de la clase"
  Private Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _nuevo As Boolean)
    If _OperadorDatos Is Nothing Then
      Throw New InvalidOperationException("El operador de datos es nulo")
    End If

    OperadorDatos = _OperadorDatos
    EsNuevo = _nuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Zafra As ZafraSiembra, ByVal _Emb_codigo As Integer, ByVal _Nuevo As Boolean)
    If _OperadorDatos Is Nothing Then
      Throw New InvalidOperationException("El operador de datos es nulo")
    End If

    OperadorDatos = _OperadorDatos
    Me.Zafra = _Zafra
    Me.Emb_codigo = _Emb_codigo
    EsNuevo = _Nuevo
    If Not _Nuevo Then
      If Not Me.Recargar Then
        Throw New Exception("El objeto no puede ser cargado")
      End If
    End If
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Zafra As ZafraSiembra)
    If _OperadorDatos Is Nothing Then
      Throw New InvalidOperationException("El operador de datos es nulo")
    End If

    OperadorDatos = _OperadorDatos
    Me.Zafra = _Zafra
    EsNuevo = True
  End Sub
#End Region

#Region "Implementación de los métodos de persistencia"
  Public Function Recargar() As Boolean
    Dim dsResult As New DataSet
    Dim bResult As Boolean

    With OperadorDatos
      .AgregarParametro("@accion", "C")
      .AgregarParametro("@Zaf_codigo", mZaf_codigo)
      .AgregarParametro("@Emb_codigo", Me.mEmb_codigo)
      .Procedimiento = _Procedimiento
      bResult = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bResult AndAlso Not dsResult Is Nothing AndAlso dsResult.Tables.Count > 0 AndAlso dsResult.Tables(0).Rows.Count > 0 Then
      Me.MapearDataRowaObjeto(dsResult.Tables(0).Rows(0))
      Return True
    Else
      Return False
    End If
  End Function
#End Region

#Region "Métodos internos de la clase"
  Private Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Me.mZaf_codigo = CStr(Fila("Zaf_codigo"))
    mZafra = Nothing
    Me.mEmb_codigo = CInt(Fila("Emb_codigo"))
    Me.mEmb_fecha = CDate(Fila("Emb_fecha"))
    Me.mDes_codigo = CInt(Fila("Des_codigo"))
    mDestino = Nothing
  End Sub

  Public Function Guardar() As Boolean
    Dim dsResult As New DataSet
    Dim bReturn As Boolean
    Dim sAccion As String = String.Empty
    If esNuevo Then
      sAccion = "I"
    Else
      sAccion = "M"
    End If
    With OperadorDatos
      .AgregarParametro("@accion", sAccion)
      .AgregarParametro("@Zaf_codigo", Me.mZaf_codigo)
      .AgregarParametro("@Emb_codigo", Me.mEmb_codigo)
      .AgregarParametro("@Emb_fecha", Me.mEmb_fecha)
      .AgregarParametro("@Des_codigo", Me.mDes_codigo)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      If bReturn Then
        EsNuevo = False
      End If
      .LimpiarParametros()
    End With
    Return bReturn
  End Function

  Public Function Eliminar() As Boolean
    Dim dsResult As New DataSet
    Dim bReturn As Boolean
    With OperadorDatos
      .AgregarParametro("@accion", "E")
      .AgregarParametro("@Zaf_codigo", Me.mZaf_codigo)
      .AgregarParametro("@Emb_codigo", Me.mEmb_codigo)
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    Return bReturn
  End Function
#End Region

#Region "Métodos compartidos"
  Public Shared Function RetornarEmbarques(ByVal _OperadorDatos As OperadorDatos, Optional ByVal _Zafra As ZafraSiembra = Nothing) As EmbarqueCollection
    Dim oResult As New EmbarqueCollection
    Dim bReturn As Boolean
    Dim dsResult As New DataSet
    With _OperadorDatos
      .AgregarParametro("@accion", "f")
      If Not _Zafra Is Nothing Then
        .AgregarParametro("@Zaf_codigo", _Zafra.Zaf_codigo)
      End If
      .Procedimiento = _Procedimiento
      bReturn = .Ejecutar(dsResult)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not dsResult Is Nothing AndAlso dsResult.Tables.Count > 0 AndAlso dsResult.Tables(0).Rows.Count > 0 Then
      For Each _dr As DataRow In dsResult.Tables(0).Rows
        Dim _obj As New Embarque(_OperadorDatos, False)
        _obj.MapearDataRowaObjeto(_dr)
        oResult.Add(_obj)
      Next
    End If
    Return oResult
  End Function
#End Region
End Class

Public Class EmbarqueCollection
  Inherits System.ComponentModel.BindingList(Of Embarque)
  Public Sub New()
  End Sub

End Class
