'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.42
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Xml
Imports System.Xml.Serialization
Imports Infoware.Reglas



#Region "SemillaSiembra"
Partial Public Class SemillaSiembra
  Inherits _Database

#Region "Campos variables"
  Private mSem_codigo As String = String.Empty
  Private mSem_nombre As String = String.Empty
  Private mSem_esnatural As Boolean = True
  Private mSem_escandela As Boolean = True
  Private mSem_hojas As Integer = 0
#End Region

#Region "Propiedades públicas de la clase"

  <XmlAttribute()> _
  Public Overridable Property Sem_codigo() As String
    Get
      Return Me.mSem_codigo
    End Get
    Set(ByVal value As String)
      If String.IsNullOrWhiteSpace(value) Then
        Throw New ArgumentNullException("Código", "El código no acepta vacio")
      End If

      If value.Trim.Length > 5 Then
        Throw New ArgumentException("Código", "El código debe tener hasta 5 caracteres")
      End If
      Me.mSem_codigo = value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Sem_nombre() As String
    Get
      Return Me.mSem_nombre
    End Get
    Set(ByVal Value As String)
      If String.IsNullOrWhiteSpace(Value) Then
        Throw New ArgumentNullException("Descripcion", "La Descripcion no acepta vacio")
      End If
      mSem_nombre = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Sem_esNatural() As Boolean
    Get
      Return Me.mSem_esnatural
    End Get
    Set(ByVal Value As Boolean)
      mSem_esnatural = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Sem_esCandela() As Boolean
    Get
      Return Me.mSem_escandela
    End Get
    Set(ByVal Value As Boolean)
      mSem_escandela = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Sem_hojas() As Integer
    Get
      Return Me.mSem_hojas
    End Get
    Set(ByVal Value As Integer)
      If Value = 0 Then
        Throw New ArgumentNullException("Hojas", "Debe tener al menos 1 hoja")
      End If
      mSem_hojas = Value
    End Set
  End Property

#End Region

#Region "Constructores de la clase"
  Public Sub New()
    MyBase.New()
  End Sub
#End Region
End Class
#End Region