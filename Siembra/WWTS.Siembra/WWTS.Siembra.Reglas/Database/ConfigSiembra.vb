'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.42
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Xml
Imports System.Xml.Serialization
Imports Infoware.Reglas



#Region "ConfigSiembra"
Partial Public Class ConfigSiembra
  Inherits _Database

#Region "Campos variables"
  Private mCfs_tara As Decimal = 0.0
  Private mCfs_empaque As Integer = 0
  Private mCfs_ensarte As Integer = 0
  Private mCfs_rutaetiq As String = String.Empty
  Private mCfs_bloque As Integer = 0
#End Region

#Region "Propiedades públicas de la clase"
  <XmlAttribute()> _
  Public Overridable Property Cfs_tara() As Decimal
    Get
      Return Me.mCfs_tara
    End Get
    Set(ByVal Value As Decimal)
      If Value < 0 Then
        Throw New ArgumentNullException("Tara", "Debe ser positivo o cero")
      End If
      Me.mCfs_tara = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Cfs_empaque() As Integer
    Get
      Return Me.mCfs_empaque
    End Get
    Set(ByVal Value As Integer)
      If Value < 0 Then
        Throw New ArgumentNullException("Empaque", "Secuencia debe ser positivo o cero")
      End If
      Me.mCfs_empaque = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Cfs_ensarte() As Integer
    Get
      Return Me.mCfs_ensarte
    End Get
    Set(ByVal Value As Integer)
      If Value < 0 Then
        Throw New ArgumentNullException("Ensarte", "Secuencia debe ser positivo o cero")
      End If
      Me.mCfs_ensarte = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Cfs_rutaetiq() As String
    Get
      Return mCfs_rutaetiq
    End Get
    Set(ByVal Value As String)
      mCfs_rutaetiq = Value
    End Set
  End Property

  <XmlAttribute()> _
  Public Overridable Property Cfs_bloque() As Integer
    Get
      Return mCfs_bloque
    End Get
    Set(ByVal Value As Integer)
      If Value < 0 Then
        Throw New ArgumentNullException("Bloque", "Secuencia debe ser positivo o cero")
      End If
      mCfs_bloque = Value
    End Set
  End Property
#End Region

#Region "Constructores de la clase"
  Public Sub New()
    MyBase.New()
  End Sub
#End Region
End Class
#End Region